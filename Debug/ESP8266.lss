
ESP8266.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000194  00800200  000015de  00001672  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000015de  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000a9  00800394  00800394  00001806  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001806  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001864  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  000018a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000020ee  00000000  00000000  000019ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011b6  00000000  00000000  00003ada  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dae  00000000  00000000  00004c90  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000044c  00000000  00000000  00005a40  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b46  00000000  00000000  00005e8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001170  00000000  00000000  000069d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00007b42  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	73 c4       	rjmp	.+2278   	; 0x978 <__vector_36>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ee ed       	ldi	r30, 0xDE	; 222
      fc:	f5 e1       	ldi	r31, 0x15	; 21
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a4 39       	cpi	r26, 0x94	; 148
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	24 e0       	ldi	r18, 0x04	; 4
     110:	a4 e9       	ldi	r26, 0x94	; 148
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ad 33       	cpi	r26, 0x3D	; 61
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	99 d0       	rcall	.+306    	; 0x252 <main>
     120:	0c 94 ed 0a 	jmp	0x15da	; 0x15da <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <DHT_WakeUp>:
#include <stdio.h>

//Used for the initial Wakeup/connection between the DHT11 and the MCU
void DHT_WakeUp(void)
{	
	clear_bit(DHT_PORT, DHT_BIT);	//Pulls the bit HIGH
     126:	11 98       	cbi	0x02, 1	; 2
	set_bit(DHT_DDR, DHT_BIT);		//Pulls the bit LOW
     128:	09 9a       	sbi	0x01, 1	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     12a:	2f ef       	ldi	r18, 0xFF	; 255
     12c:	80 ee       	ldi	r24, 0xE0	; 224
     12e:	90 e0       	ldi	r25, 0x00	; 0
     130:	21 50       	subi	r18, 0x01	; 1
     132:	80 40       	sbci	r24, 0x00	; 0
     134:	90 40       	sbci	r25, 0x00	; 0
     136:	e1 f7       	brne	.-8      	; 0x130 <DHT_WakeUp+0xa>
     138:	00 c0       	rjmp	.+0      	; 0x13a <DHT_WakeUp+0x14>
     13a:	00 00       	nop
	_delay_ms(18);					//Delay to let the DHT Detect the signal
	set_bit(DHT_PORT, DHT_BIT);		//Enabels buildin Pullup resistance
     13c:	11 9a       	sbi	0x02, 1	; 2
	clear_bit(DHT_DDR, DHT_BIT);	//Clears the bit so it will go HIGH via the pullup
     13e:	09 98       	cbi	0x01, 1	; 1
     140:	08 95       	ret

00000142 <DHT_Response>:
}

//Checks if the DHT Responds
int DHT_Response(void)
{	
     142:	cf 92       	push	r12
     144:	df 92       	push	r13
     146:	ef 92       	push	r14
     148:	ff 92       	push	r15
	double counter = 0;
     14a:	c1 2c       	mov	r12, r1
     14c:	d1 2c       	mov	r13, r1
     14e:	76 01       	movw	r14, r12
	//Waits for the DHT11 to response
	while(bit_is_set(DHT_PIN, DHT_BIT))
     150:	14 c0       	rjmp	.+40     	; 0x17a <DHT_Response+0x38>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     152:	8a e0       	ldi	r24, 0x0A	; 10
     154:	8a 95       	dec	r24
     156:	f1 f7       	brne	.-4      	; 0x154 <DHT_Response+0x12>
     158:	00 c0       	rjmp	.+0      	; 0x15a <DHT_Response+0x18>
	{	
		_delay_us(2);
		counter += 2;
     15a:	20 e0       	ldi	r18, 0x00	; 0
     15c:	30 e0       	ldi	r19, 0x00	; 0
     15e:	40 e0       	ldi	r20, 0x00	; 0
     160:	50 e4       	ldi	r21, 0x40	; 64
     162:	c7 01       	movw	r24, r14
     164:	b6 01       	movw	r22, r12
     166:	bd d4       	rcall	.+2426   	; 0xae2 <__addsf3>
     168:	6b 01       	movw	r12, r22
     16a:	7c 01       	movw	r14, r24
		//If the DHT11 takes over 60 us the connection timeouts
		if (counter >= 60)
     16c:	20 e0       	ldi	r18, 0x00	; 0
     16e:	30 e0       	ldi	r19, 0x00	; 0
     170:	40 e7       	ldi	r20, 0x70	; 112
     172:	52 e4       	ldi	r21, 0x42	; 66
     174:	41 d6       	rcall	.+3202   	; 0xdf8 <__gesf2>
     176:	88 23       	and	r24, r24
     178:	3c f4       	brge	.+14     	; 0x188 <DHT_Response+0x46>
//Checks if the DHT Responds
int DHT_Response(void)
{	
	double counter = 0;
	//Waits for the DHT11 to response
	while(bit_is_set(DHT_PIN, DHT_BIT))
     17a:	01 99       	sbic	0x00, 1	; 0
     17c:	ea cf       	rjmp	.-44     	; 0x152 <DHT_Response+0x10>
		//If the DHT11 takes over 60 us the connection timeouts
		if (counter >= 60)
			return 0;
	}
	//Waits for the DHT11 response to end
	while(bit_is_clear(DHT_PIN, DHT_BIT))
     17e:	01 9b       	sbis	0x00, 1	; 0
     180:	fe cf       	rjmp	.-4      	; 0x17e <DHT_Response+0x3c>
	{
	}
	//Returns when the DHT11 gets ready to transmitt data
	while(bit_is_set(DHT_PIN, DHT_BIT))
     182:	01 99       	sbic	0x00, 1	; 0
     184:	04 c0       	rjmp	.+8      	; 0x18e <DHT_Response+0x4c>
	{
		return 1;
	}
}
     186:	05 c0       	rjmp	.+10     	; 0x192 <DHT_Response+0x50>
	{	
		_delay_us(2);
		counter += 2;
		//If the DHT11 takes over 60 us the connection timeouts
		if (counter >= 60)
			return 0;
     188:	80 e0       	ldi	r24, 0x00	; 0
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	02 c0       	rjmp	.+4      	; 0x192 <DHT_Response+0x50>
	{
	}
	//Returns when the DHT11 gets ready to transmitt data
	while(bit_is_set(DHT_PIN, DHT_BIT))
	{
		return 1;
     18e:	81 e0       	ldi	r24, 0x01	; 1
     190:	90 e0       	ldi	r25, 0x00	; 0
	}
}
     192:	ff 90       	pop	r15
     194:	ef 90       	pop	r14
     196:	df 90       	pop	r13
     198:	cf 90       	pop	r12
     19a:	08 95       	ret

0000019c <DHT_Decode_Data>:

//Decodes the data that the DHT11 sends to the MCU
void DHT_Decode_Data(int (*array)[8])
{
     19c:	cf 93       	push	r28
	//Waits for the DHT11 to start transmitting
	while(bit_is_set(DHT_PIN, DHT_BIT))
     19e:	02 c0       	rjmp	.+4      	; 0x1a4 <DHT_Decode_Data+0x8>
	{
		//Breaks when the DHT11 strat transmitting
		if(bit_is_clear(DHT_PIN, DHT_BIT))
     1a0:	01 9b       	sbis	0x00, 1	; 0
     1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <DHT_Decode_Data+0xc>

//Decodes the data that the DHT11 sends to the MCU
void DHT_Decode_Data(int (*array)[8])
{
	//Waits for the DHT11 to start transmitting
	while(bit_is_set(DHT_PIN, DHT_BIT))
     1a4:	01 99       	sbic	0x00, 1	; 0
     1a6:	fc cf       	rjmp	.-8      	; 0x1a0 <DHT_Decode_Data+0x4>
     1a8:	dc 01       	movw	r26, r24
     1aa:	80 5b       	subi	r24, 0xB0	; 176
     1ac:	9f 4f       	sbci	r25, 0xFF	; 255
				array[i][j] = 0;
			}
			//If the bit is HIGH for more than 60us the bit is Logic 1/HIGH
			if (timer > 60)
			{
				array[i][j] = 1;
     1ae:	61 e0       	ldi	r22, 0x01	; 1
     1b0:	70 e0       	ldi	r23, 0x00	; 0
     1b2:	25 c0       	rjmp	.+74     	; 0x1fe <DHT_Decode_Data+0x62>
	for (i = 0; i < 5; i++){
		//Loop for each bit
		for (j = 0; j < 8; j++){
			int timer = 0;
			//Waits for the LOW part of the transmission to end
			while(bit_is_clear(DHT_PIN, DHT_BIT)){}
     1b4:	01 9b       	sbis	0x00, 1	; 0
     1b6:	fe cf       	rjmp	.-4      	; 0x1b4 <DHT_Decode_Data+0x18>
				
			//Begins counting the time the bit is HIGH
			while(bit_is_set(DHT_PIN, DHT_BIT)){
     1b8:	01 9b       	sbis	0x00, 1	; 0
     1ba:	0e c0       	rjmp	.+28     	; 0x1d8 <DHT_Decode_Data+0x3c>
     1bc:	20 e0       	ldi	r18, 0x00	; 0
     1be:	30 e0       	ldi	r19, 0x00	; 0
     1c0:	ca e0       	ldi	r28, 0x0A	; 10
     1c2:	ca 95       	dec	r28
     1c4:	f1 f7       	brne	.-4      	; 0x1c2 <DHT_Decode_Data+0x26>
     1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <DHT_Decode_Data+0x2c>
				_delay_us(2);
				timer += 2;
     1c8:	2e 5f       	subi	r18, 0xFE	; 254
     1ca:	3f 4f       	sbci	r19, 0xFF	; 255
			int timer = 0;
			//Waits for the LOW part of the transmission to end
			while(bit_is_clear(DHT_PIN, DHT_BIT)){}
				
			//Begins counting the time the bit is HIGH
			while(bit_is_set(DHT_PIN, DHT_BIT)){
     1cc:	01 99       	sbic	0x00, 1	; 0
     1ce:	f8 cf       	rjmp	.-16     	; 0x1c0 <DHT_Decode_Data+0x24>
				_delay_us(2);
				timer += 2;
			}	
			//If the bit is HIGH for less than 23us the bit is Logic 0/LOW
			if (timer < 23 || timer == NULL)
     1d0:	27 31       	cpi	r18, 0x17	; 23
     1d2:	31 05       	cpc	r19, r1
     1d4:	34 f4       	brge	.+12     	; 0x1e2 <DHT_Decode_Data+0x46>
     1d6:	02 c0       	rjmp	.+4      	; 0x1dc <DHT_Decode_Data+0x40>
			int timer = 0;
			//Waits for the LOW part of the transmission to end
			while(bit_is_clear(DHT_PIN, DHT_BIT)){}
				
			//Begins counting the time the bit is HIGH
			while(bit_is_set(DHT_PIN, DHT_BIT)){
     1d8:	20 e0       	ldi	r18, 0x00	; 0
     1da:	30 e0       	ldi	r19, 0x00	; 0
				timer += 2;
			}	
			//If the bit is HIGH for less than 23us the bit is Logic 0/LOW
			if (timer < 23 || timer == NULL)
			{
				array[i][j] = 0;
     1dc:	11 96       	adiw	r26, 0x01	; 1
     1de:	1c 92       	st	X, r1
     1e0:	1e 92       	st	-X, r1
			}
			//If the bit is HIGH for more than 60us the bit is Logic 1/HIGH
			if (timer > 60)
     1e2:	2d 33       	cpi	r18, 0x3D	; 61
     1e4:	31 05       	cpc	r19, r1
     1e6:	14 f0       	brlt	.+4      	; 0x1ec <DHT_Decode_Data+0x50>
			{
				array[i][j] = 1;
     1e8:	71 83       	std	Z+1, r23	; 0x01
     1ea:	60 83       	st	Z, r22
     1ec:	32 96       	adiw	r30, 0x02	; 2
     1ee:	12 96       	adiw	r26, 0x02	; 2
	int i;
	int j;
	//Loop for each byte
	for (i = 0; i < 5; i++){
		//Loop for each bit
		for (j = 0; j < 8; j++){
     1f0:	4e 17       	cp	r20, r30
     1f2:	5f 07       	cpc	r21, r31
     1f4:	f9 f6       	brne	.-66     	; 0x1b4 <DHT_Decode_Data+0x18>
     1f6:	da 01       	movw	r26, r20
		break;
	}
	int i;
	int j;
	//Loop for each byte
	for (i = 0; i < 5; i++){
     1f8:	48 17       	cp	r20, r24
     1fa:	59 07       	cpc	r21, r25
     1fc:	29 f0       	breq	.+10     	; 0x208 <DHT_Decode_Data+0x6c>
     1fe:	ad 01       	movw	r20, r26
     200:	40 5f       	subi	r20, 0xF0	; 240
     202:	5f 4f       	sbci	r21, 0xFF	; 255
	}
}

//Decodes the data that the DHT11 sends to the MCU
void DHT_Decode_Data(int (*array)[8])
{
     204:	fd 01       	movw	r30, r26
     206:	d6 cf       	rjmp	.-84     	; 0x1b4 <DHT_Decode_Data+0x18>
			{
				array[i][j] = 1;
			}
		}
	}
}
     208:	cf 91       	pop	r28
     20a:	08 95       	ret

0000020c <ConvertToDecimal>:
{
	int multiplier = 1, output = 0;
	//Runs through each bit in the selected byte LSB First
	for(int i = 7; i >= 0; i--)
	{			
		output += (multiplier * array[byte - 1][i]);
     20c:	ab 01       	movw	r20, r22
     20e:	41 50       	subi	r20, 0x01	; 1
     210:	50 4f       	sbci	r21, 0xF0	; 240
     212:	42 95       	swap	r20
     214:	52 95       	swap	r21
     216:	50 7f       	andi	r21, 0xF0	; 240
     218:	54 27       	eor	r21, r20
     21a:	40 7f       	andi	r20, 0xF0	; 240
     21c:	54 27       	eor	r21, r20
     21e:	84 0f       	add	r24, r20
     220:	95 1f       	adc	r25, r21
     222:	fc 01       	movw	r30, r24
     224:	70 96       	adiw	r30, 0x10	; 16
     226:	ac 01       	movw	r20, r24
}

//Converts the bytes in the array to Decimal
int ConvertToDecimal(int (*array)[8], int byte)
{
	int multiplier = 1, output = 0;
     228:	80 e0       	ldi	r24, 0x00	; 0
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	21 e0       	ldi	r18, 0x01	; 1
     22e:	30 e0       	ldi	r19, 0x00	; 0
	//Runs through each bit in the selected byte LSB First
	for(int i = 7; i >= 0; i--)
	{			
		output += (multiplier * array[byte - 1][i]);
     230:	b2 91       	ld	r27, -Z
     232:	a2 91       	ld	r26, -Z
     234:	2a 9f       	mul	r18, r26
     236:	b0 01       	movw	r22, r0
     238:	2b 9f       	mul	r18, r27
     23a:	70 0d       	add	r23, r0
     23c:	3a 9f       	mul	r19, r26
     23e:	70 0d       	add	r23, r0
     240:	11 24       	eor	r1, r1
     242:	86 0f       	add	r24, r22
     244:	97 1f       	adc	r25, r23
		//Decides what the bit will be multiplied by: 1->2->4->8->16->32->64->128
		multiplier *= 2;
     246:	22 0f       	add	r18, r18
     248:	33 1f       	adc	r19, r19
//Converts the bytes in the array to Decimal
int ConvertToDecimal(int (*array)[8], int byte)
{
	int multiplier = 1, output = 0;
	//Runs through each bit in the selected byte LSB First
	for(int i = 7; i >= 0; i--)
     24a:	e4 17       	cp	r30, r20
     24c:	f5 07       	cpc	r31, r21
     24e:	81 f7       	brne	.-32     	; 0x230 <ConvertToDecimal+0x24>
		output += (multiplier * array[byte - 1][i]);
		//Decides what the bit will be multiplied by: 1->2->4->8->16->32->64->128
		multiplier *= 2;
	}
	return output;
}
     250:	08 95       	ret

00000252 <main>:
#include "DHT11/DHT11_Master.h"
#include "RS232/RS232.h"
#include "setup/stdio_setup.h"

int main(void)
{
     252:	cf 93       	push	r28
     254:	df 93       	push	r29
     256:	cd b7       	in	r28, 0x3d	; 61
     258:	de b7       	in	r29, 0x3e	; 62
     25a:	c6 5e       	subi	r28, 0xE6	; 230
     25c:	d1 09       	sbc	r29, r1
     25e:	0f b6       	in	r0, 0x3f	; 63
     260:	f8 94       	cli
     262:	de bf       	out	0x3e, r29	; 62
     264:	0f be       	out	0x3f, r0	; 63
     266:	cd bf       	out	0x3d, r28	; 61
	char _buffer[150];
	uint8_t Connect_Status;
	#ifdef SEND_DEMO
	#endif
	USART_Init(115200);			/* Initiate USART with 115200 baud rate */
     268:	60 e0       	ldi	r22, 0x00	; 0
     26a:	72 ec       	ldi	r23, 0xC2	; 194
     26c:	81 e0       	ldi	r24, 0x01	; 1
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	f9 d3       	rcall	.+2034   	; 0xa64 <USART_Init>
	sei();					/* Start global interrupt */

	while(!ESP8266_Begin());
     272:	78 94       	sei
     274:	fc d1       	rcall	.+1016   	; 0x66e <ESP8266_Begin>
     276:	88 23       	and	r24, r24
	ESP8266_WIFIMode(BOTH_STATION_AND_ACCESPOINT);/* 3 = Both (AP and STA) */
     278:	e9 f3       	breq	.-6      	; 0x274 <main+0x22>
     27a:	83 e0       	ldi	r24, 0x03	; 3
	ESP8266_ConnectionMode(SINGLE);		/* 0 = Single; 1 = Multi */
     27c:	0c d2       	rcall	.+1048   	; 0x696 <ESP8266_WIFIMode>
	ESP8266_ApplicationMode(NORMAL);	/* 0 = Normal Mode; 1 = Transperant Mode */
     27e:	80 e0       	ldi	r24, 0x00	; 0
     280:	c3 d1       	rcall	.+902    	; 0x608 <ESP8266_ConnectionMode>
     282:	80 e0       	ldi	r24, 0x00	; 0
	if(ESP8266_connected() == ESP8266_NOT_CONNECTED_TO_AP)
     284:	8e d1       	rcall	.+796    	; 0x5a2 <ESP8266_ApplicationMode>
     286:	97 d2       	rcall	.+1326   	; 0x7b6 <ESP8266_connected>
     288:	83 30       	cpi	r24, 0x03	; 3
	ESP8266_JoinAccessPoint(SSID, PASSWORD);	
     28a:	29 f4       	brne	.+10     	; 0x296 <main+0x44>
     28c:	60 e0       	ldi	r22, 0x00	; 0
     28e:	72 e0       	ldi	r23, 0x02	; 2
     290:	8b e0       	ldi	r24, 0x0B	; 11
     292:	92 e0       	ldi	r25, 0x02	; 2
     294:	33 d2       	rcall	.+1126   	; 0x6fc <ESP8266_JoinAccessPoint>
	while(1)
	{
		Connect_Status = ESP8266_connected();
     296:	8f d2       	rcall	.+1310   	; 0x7b6 <ESP8266_connected>
		if(Connect_Status == ESP8266_NOT_CONNECTED_TO_AP)
     298:	83 30       	cpi	r24, 0x03	; 3
		ESP8266_JoinAccessPoint(SSID, PASSWORD);
     29a:	29 f4       	brne	.+10     	; 0x2a6 <main+0x54>
     29c:	60 e0       	ldi	r22, 0x00	; 0
     29e:	72 e0       	ldi	r23, 0x02	; 2
     2a0:	8b e0       	ldi	r24, 0x0B	; 11
     2a2:	92 e0       	ldi	r25, 0x02	; 2

		#ifdef SEND_DEMO
		DHT_WakeUp();
     2a4:	2b d2       	rcall	.+1110   	; 0x6fc <ESP8266_JoinAccessPoint>
     2a6:	3f df       	rcall	.-386    	; 0x126 <DHT_WakeUp>
		int array[5][8];
		if (DHT_Response())
     2a8:	4c df       	rcall	.-360    	; 0x142 <DHT_Response>
     2aa:	89 2b       	or	r24, r25
     2ac:	a1 f3       	breq	.-24     	; 0x296 <main+0x44>
		{
			DHT_Decode_Data(array);
     2ae:	ce 01       	movw	r24, r28
     2b0:	89 56       	subi	r24, 0x69	; 105
     2b2:	9f 4f       	sbci	r25, 0xFF	; 255
     2b4:	73 df       	rcall	.-282    	; 0x19c <DHT_Decode_Data>
			//TransmitData
			ESP8266_TRANSMIT(ConvertToDecimal(array, 3), 1, _buffer);
     2b6:	63 e0       	ldi	r22, 0x03	; 3
     2b8:	70 e0       	ldi	r23, 0x00	; 0
     2ba:	ce 01       	movw	r24, r28
     2bc:	89 56       	subi	r24, 0x69	; 105
     2be:	9f 4f       	sbci	r25, 0xFF	; 255
     2c0:	a5 df       	rcall	.-182    	; 0x20c <ConvertToDecimal>
     2c2:	ae 01       	movw	r20, r28
     2c4:	4f 5f       	subi	r20, 0xFF	; 255
     2c6:	5f 4f       	sbci	r21, 0xFF	; 255
     2c8:	61 e0       	ldi	r22, 0x01	; 1
     2ca:	70 e0       	ldi	r23, 0x00	; 0
     2cc:	91 d3       	rcall	.+1826   	; 0x9f0 <ESP8266_TRANSMIT>
     2ce:	2f ef       	ldi	r18, 0xFF	; 255
     2d0:	39 e5       	ldi	r19, 0x59	; 89
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2d2:	82 e6       	ldi	r24, 0x62	; 98
     2d4:	92 e0       	ldi	r25, 0x02	; 2
     2d6:	21 50       	subi	r18, 0x01	; 1
     2d8:	30 40       	sbci	r19, 0x00	; 0
     2da:	80 40       	sbci	r24, 0x00	; 0
     2dc:	90 40       	sbci	r25, 0x00	; 0
     2de:	d9 f7       	brne	.-10     	; 0x2d6 <main+0x84>
     2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <main+0x90>
     2e2:	00 00       	nop
			_delay_ms(15000);	// Thingspeak server delay
			ESP8266_TRANSMIT(ConvertToDecimal(array, 1), 2, _buffer);
     2e4:	61 e0       	ldi	r22, 0x01	; 1
     2e6:	70 e0       	ldi	r23, 0x00	; 0
     2e8:	ce 01       	movw	r24, r28
     2ea:	89 56       	subi	r24, 0x69	; 105
     2ec:	9f 4f       	sbci	r25, 0xFF	; 255
     2ee:	8e df       	rcall	.-228    	; 0x20c <ConvertToDecimal>
     2f0:	ae 01       	movw	r20, r28
     2f2:	4f 5f       	subi	r20, 0xFF	; 255
     2f4:	5f 4f       	sbci	r21, 0xFF	; 255
     2f6:	62 e0       	ldi	r22, 0x02	; 2
     2f8:	70 e0       	ldi	r23, 0x00	; 0
     2fa:	7a d3       	rcall	.+1780   	; 0x9f0 <ESP8266_TRANSMIT>
     2fc:	2f ef       	ldi	r18, 0xFF	; 255
     2fe:	39 e5       	ldi	r19, 0x59	; 89
     300:	82 e6       	ldi	r24, 0x62	; 98
     302:	92 e0       	ldi	r25, 0x02	; 2
     304:	21 50       	subi	r18, 0x01	; 1
     306:	30 40       	sbci	r19, 0x00	; 0
     308:	80 40       	sbci	r24, 0x00	; 0
     30a:	90 40       	sbci	r25, 0x00	; 0
     30c:	d9 f7       	brne	.-10     	; 0x304 <main+0xb2>
     30e:	00 c0       	rjmp	.+0      	; 0x310 <main+0xbe>
     310:	00 00       	nop
     312:	c1 cf       	rjmp	.-126    	; 0x296 <main+0x44>

00000314 <Read_Response>:
     314:	2f 92       	push	r2
		sprintf(_buffer, "GET /channels/%s/feeds/last.txt", CHANNEL_ID);
		ESP8266_Send(_buffer);
		Read_Data(_buffer);
		_delay_ms(600);
		#endif
	}
     316:	3f 92       	push	r3
	uint16_t len = 0;
	_delay_ms(100);
	while(ESP8266_DataAvailable() > 0)
	_buffer[len++] = ESP8266_DataRead();
	return len;
}
     318:	4f 92       	push	r4
     31a:	5f 92       	push	r5
     31c:	6f 92       	push	r6
     31e:	7f 92       	push	r7
     320:	8f 92       	push	r8
     322:	9f 92       	push	r9
     324:	af 92       	push	r10
     326:	bf 92       	push	r11
     328:	cf 92       	push	r12
     32a:	df 92       	push	r13
     32c:	ef 92       	push	r14
     32e:	ff 92       	push	r15
     330:	0f 93       	push	r16
     332:	1f 93       	push	r17
     334:	cf 93       	push	r28
     336:	df 93       	push	r29
     338:	cd b7       	in	r28, 0x3d	; 61
     33a:	de b7       	in	r29, 0x3e	; 62
     33c:	2c 97       	sbiw	r28, 0x0c	; 12
     33e:	0f b6       	in	r0, 0x3f	; 63
     340:	f8 94       	cli
     342:	de bf       	out	0x3e, r29	; 62
     344:	0f be       	out	0x3f, r0	; 63
     346:	cd bf       	out	0x3d, r28	; 61
     348:	9e 83       	std	Y+6, r25	; 0x06
     34a:	8d 83       	std	Y+5, r24	; 0x05
     34c:	2d b7       	in	r18, 0x3d	; 61
     34e:	3e b7       	in	r19, 0x3e	; 62
     350:	3c 87       	std	Y+12, r19	; 0x0c
     352:	2b 87       	std	Y+11, r18	; 0x0b
     354:	fc 01       	movw	r30, r24
     356:	01 90       	ld	r0, Z+
     358:	00 20       	and	r0, r0
     35a:	e9 f7       	brne	.-6      	; 0x356 <Read_Response+0x42>
     35c:	31 97       	sbiw	r30, 0x01	; 1
     35e:	5f 01       	movw	r10, r30
     360:	a8 1a       	sub	r10, r24
     362:	b9 0a       	sbc	r11, r25
     364:	bb 24       	eor	r11, r11
     366:	a5 01       	movw	r20, r10
     368:	41 50       	subi	r20, 0x01	; 1
     36a:	51 09       	sbc	r21, r1
     36c:	58 87       	std	Y+8, r21	; 0x08
     36e:	4f 83       	std	Y+7, r20	; 0x07
     370:	8d b7       	in	r24, 0x3d	; 61
     372:	9e b7       	in	r25, 0x3e	; 62
     374:	8a 19       	sub	r24, r10
     376:	9b 09       	sbc	r25, r11
     378:	0f b6       	in	r0, 0x3f	; 63
     37a:	f8 94       	cli
     37c:	9e bf       	out	0x3e, r25	; 62
     37e:	0f be       	out	0x3f, r0	; 63
     380:	8d bf       	out	0x3d, r24	; 61
     382:	ad b7       	in	r26, 0x3d	; 61
     384:	be b7       	in	r27, 0x3e	; 62
     386:	11 96       	adiw	r26, 0x01	; 1
     388:	4d 01       	movw	r8, r26
     38a:	80 91 94 03 	lds	r24, 0x0394	; 0x800394 <__data_end>
     38e:	90 91 95 03 	lds	r25, 0x0395	; 0x800395 <__data_end+0x1>
     392:	a0 91 96 03 	lds	r26, 0x0396	; 0x800396 <__data_end+0x2>
     396:	b0 91 97 03 	lds	r27, 0x0397	; 0x800397 <__data_end+0x3>
     39a:	80 3f       	cpi	r24, 0xF0	; 240
     39c:	98 4d       	sbci	r25, 0xD8	; 216
     39e:	af 4f       	sbci	r26, 0xFF	; 255
     3a0:	bf 4f       	sbci	r27, 0xFF	; 255
     3a2:	61 f4       	brne	.+24     	; 0x3bc <Read_Response+0xa8>
     3a4:	10 92 94 03 	sts	0x0394, r1	; 0x800394 <__data_end>
     3a8:	10 92 95 03 	sts	0x0395, r1	; 0x800395 <__data_end+0x1>
     3ac:	10 92 96 03 	sts	0x0396, r1	; 0x800396 <__data_end+0x2>
     3b0:	10 92 97 03 	sts	0x0397, r1	; 0x800397 <__data_end+0x3>
     3b4:	82 e0       	ldi	r24, 0x02	; 2
     3b6:	80 93 3c 04 	sts	0x043C, r24	; 0x80043c <Response_Status>
     3ba:	99 c0       	rjmp	.+306    	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
     3bc:	19 82       	std	Y+1, r1	; 0x01
     3be:	1a 82       	std	Y+2, r1	; 0x02
     3c0:	1b 82       	std	Y+3, r1	; 0x03
     3c2:	1c 82       	std	Y+4, r1	; 0x04
     3c4:	2f 80       	ldd	r2, Y+7	; 0x07
     3c6:	38 84       	ldd	r3, Y+8	; 0x08
     3c8:	28 0c       	add	r2, r8
     3ca:	39 1c       	adc	r3, r9
     3cc:	94 01       	movw	r18, r8
     3ce:	2f 5f       	subi	r18, 0xFF	; 255
     3d0:	3f 4f       	sbci	r19, 0xFF	; 255
     3d2:	3a 87       	std	Y+10, r19	; 0x0a
     3d4:	29 87       	std	Y+9, r18	; 0x09
     3d6:	80 91 3c 04 	lds	r24, 0x043C	; 0x80043c <Response_Status>
     3da:	84 30       	cpi	r24, 0x04	; 4
     3dc:	11 f4       	brne	.+4      	; 0x3e2 <Read_Response+0xce>
     3de:	10 92 3c 04 	sts	0x043C, r1	; 0x80043c <Response_Status>
     3e2:	ec e9       	ldi	r30, 0x9C	; 156
     3e4:	f3 e0       	ldi	r31, 0x03	; 3
     3e6:	01 90       	ld	r0, Z+
     3e8:	00 20       	and	r0, r0
     3ea:	e9 f7       	brne	.-6      	; 0x3e6 <Read_Response+0xd2>
     3ec:	31 97       	sbiw	r30, 0x01	; 1
     3ee:	cf 01       	movw	r24, r30
     3f0:	8c 59       	subi	r24, 0x9C	; 156
     3f2:	93 40       	sbci	r25, 0x03	; 3
     3f4:	6c 01       	movw	r12, r24
     3f6:	e1 2c       	mov	r14, r1
     3f8:	f1 2c       	mov	r15, r1
     3fa:	c1 14       	cp	r12, r1
     3fc:	d1 04       	cpc	r13, r1
     3fe:	e1 04       	cpc	r14, r1
     400:	f1 04       	cpc	r15, r1
     402:	09 f4       	brne	.+2      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     404:	4f c0       	rjmp	.+158    	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     406:	8f e9       	ldi	r24, 0x9F	; 159
     408:	9f e0       	ldi	r25, 0x0F	; 15
     40a:	01 97       	sbiw	r24, 0x01	; 1
     40c:	f1 f7       	brne	.-4      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     40e:	00 c0       	rjmp	.+0      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     410:	00 00       	nop
     412:	29 81       	ldd	r18, Y+1	; 0x01
     414:	3a 81       	ldd	r19, Y+2	; 0x02
     416:	4b 81       	ldd	r20, Y+3	; 0x03
     418:	5c 81       	ldd	r21, Y+4	; 0x04
     41a:	2f 5f       	subi	r18, 0xFF	; 255
     41c:	3f 4f       	sbci	r19, 0xFF	; 255
     41e:	4f 4f       	sbci	r20, 0xFF	; 255
     420:	5f 4f       	sbci	r21, 0xFF	; 255
     422:	29 83       	std	Y+1, r18	; 0x01
     424:	3a 83       	std	Y+2, r19	; 0x02
     426:	4b 83       	std	Y+3, r20	; 0x03
     428:	5c 83       	std	Y+4, r21	; 0x04
     42a:	ec e9       	ldi	r30, 0x9C	; 156
     42c:	f3 e0       	ldi	r31, 0x03	; 3
     42e:	01 90       	ld	r0, Z+
     430:	00 20       	and	r0, r0
     432:	e9 f7       	brne	.-6      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     434:	31 97       	sbiw	r30, 0x01	; 1
     436:	cf 01       	movw	r24, r30
     438:	8c 59       	subi	r24, 0x9C	; 156
     43a:	93 40       	sbci	r25, 0x03	; 3
     43c:	a0 e0       	ldi	r26, 0x00	; 0
     43e:	b0 e0       	ldi	r27, 0x00	; 0
     440:	c8 16       	cp	r12, r24
     442:	d9 06       	cpc	r13, r25
     444:	ea 06       	cpc	r14, r26
     446:	fb 06       	cpc	r15, r27
     448:	69 f5       	brne	.+90     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     44a:	0c e9       	ldi	r16, 0x9C	; 156
     44c:	13 e0       	ldi	r17, 0x03	; 3
     44e:	41 2c       	mov	r4, r1
     450:	51 2c       	mov	r5, r1
     452:	32 01       	movw	r6, r4
     454:	4f 81       	ldd	r20, Y+7	; 0x07
     456:	58 85       	ldd	r21, Y+8	; 0x08
     458:	69 85       	ldd	r22, Y+9	; 0x09
     45a:	7a 85       	ldd	r23, Y+10	; 0x0a
     45c:	c4 01       	movw	r24, r8
     45e:	a9 d5       	rcall	.+2898   	; 0xfb2 <memmove>
     460:	d8 01       	movw	r26, r16
     462:	8d 91       	ld	r24, X+
     464:	8d 01       	movw	r16, r26
     466:	f1 01       	movw	r30, r2
     468:	80 83       	st	Z, r24
     46a:	a5 01       	movw	r20, r10
     46c:	6d 81       	ldd	r22, Y+5	; 0x05
     46e:	7e 81       	ldd	r23, Y+6	; 0x06
     470:	c4 01       	movw	r24, r8
     472:	b0 d5       	rcall	.+2912   	; 0xfd4 <strncmp>
     474:	89 2b       	or	r24, r25
     476:	61 f4       	brne	.+24     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     478:	10 92 94 03 	sts	0x0394, r1	; 0x800394 <__data_end>
     47c:	10 92 95 03 	sts	0x0395, r1	; 0x800395 <__data_end+0x1>
     480:	10 92 96 03 	sts	0x0396, r1	; 0x800396 <__data_end+0x2>
     484:	10 92 97 03 	sts	0x0397, r1	; 0x800397 <__data_end+0x3>
     488:	81 e0       	ldi	r24, 0x01	; 1
     48a:	80 93 3c 04 	sts	0x043C, r24	; 0x80043c <Response_Status>
     48e:	2f c0       	rjmp	.+94     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
     490:	ff ef       	ldi	r31, 0xFF	; 255
     492:	4f 1a       	sub	r4, r31
     494:	5f 0a       	sbc	r5, r31
     496:	6f 0a       	sbc	r6, r31
     498:	7f 0a       	sbc	r7, r31
     49a:	4c 14       	cp	r4, r12
     49c:	5d 04       	cpc	r5, r13
     49e:	6e 04       	cpc	r6, r14
     4a0:	7f 04       	cpc	r7, r15
     4a2:	c1 f6       	brne	.-80     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
     4a4:	8f e9       	ldi	r24, 0x9F	; 159
     4a6:	9f e0       	ldi	r25, 0x0F	; 15
     4a8:	01 97       	sbiw	r24, 0x01	; 1
     4aa:	f1 f7       	brne	.-4      	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
     4ac:	00 c0       	rjmp	.+0      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
     4ae:	00 00       	nop
     4b0:	29 81       	ldd	r18, Y+1	; 0x01
     4b2:	3a 81       	ldd	r19, Y+2	; 0x02
     4b4:	4b 81       	ldd	r20, Y+3	; 0x03
     4b6:	5c 81       	ldd	r21, Y+4	; 0x04
     4b8:	2f 5f       	subi	r18, 0xFF	; 255
     4ba:	3f 4f       	sbci	r19, 0xFF	; 255
     4bc:	4f 4f       	sbci	r20, 0xFF	; 255
     4be:	5f 4f       	sbci	r21, 0xFF	; 255
     4c0:	29 83       	std	Y+1, r18	; 0x01
     4c2:	3a 83       	std	Y+2, r19	; 0x02
     4c4:	4b 83       	std	Y+3, r20	; 0x03
     4c6:	5c 83       	std	Y+4, r21	; 0x04
     4c8:	80 91 94 03 	lds	r24, 0x0394	; 0x800394 <__data_end>
     4cc:	90 91 95 03 	lds	r25, 0x0395	; 0x800395 <__data_end+0x1>
     4d0:	a0 91 96 03 	lds	r26, 0x0396	; 0x800396 <__data_end+0x2>
     4d4:	b0 91 97 03 	lds	r27, 0x0397	; 0x800397 <__data_end+0x3>
     4d8:	80 5f       	subi	r24, 0xF0	; 240
     4da:	98 4d       	sbci	r25, 0xD8	; 216
     4dc:	af 4f       	sbci	r26, 0xFF	; 255
     4de:	bf 4f       	sbci	r27, 0xFF	; 255
     4e0:	28 17       	cp	r18, r24
     4e2:	39 07       	cpc	r19, r25
     4e4:	4a 07       	cpc	r20, r26
     4e6:	5b 07       	cpc	r21, r27
     4e8:	08 f4       	brcc	.+2      	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
     4ea:	75 cf       	rjmp	.-278    	; 0x3d6 <Read_Response+0xc2>
     4ec:	5b cf       	rjmp	.-330    	; 0x3a4 <Read_Response+0x90>
     4ee:	4b 85       	ldd	r20, Y+11	; 0x0b
     4f0:	5c 85       	ldd	r21, Y+12	; 0x0c
     4f2:	0f b6       	in	r0, 0x3f	; 63
     4f4:	f8 94       	cli
     4f6:	5e bf       	out	0x3e, r21	; 62
     4f8:	0f be       	out	0x3f, r0	; 63
     4fa:	4d bf       	out	0x3d, r20	; 61
     4fc:	2c 96       	adiw	r28, 0x0c	; 12
     4fe:	0f b6       	in	r0, 0x3f	; 63
     500:	f8 94       	cli
     502:	de bf       	out	0x3e, r29	; 62
     504:	0f be       	out	0x3f, r0	; 63
     506:	cd bf       	out	0x3d, r28	; 61
     508:	df 91       	pop	r29
     50a:	cf 91       	pop	r28
     50c:	1f 91       	pop	r17
     50e:	0f 91       	pop	r16
     510:	ff 90       	pop	r15
     512:	ef 90       	pop	r14
     514:	df 90       	pop	r13
     516:	cf 90       	pop	r12
     518:	bf 90       	pop	r11
     51a:	af 90       	pop	r10
     51c:	9f 90       	pop	r9
     51e:	8f 90       	pop	r8
     520:	7f 90       	pop	r7
     522:	6f 90       	pop	r6
     524:	5f 90       	pop	r5
     526:	4f 90       	pop	r4
     528:	3f 90       	pop	r3
     52a:	2f 90       	pop	r2
     52c:	08 95       	ret

0000052e <ESP8266_Clear>:
     52e:	80 ea       	ldi	r24, 0xA0	; 160
     530:	ec e9       	ldi	r30, 0x9C	; 156
     532:	f3 e0       	ldi	r31, 0x03	; 3
     534:	df 01       	movw	r26, r30
     536:	1d 92       	st	X+, r1
     538:	8a 95       	dec	r24
     53a:	e9 f7       	brne	.-6      	; 0x536 <ESP8266_Clear+0x8>
     53c:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <Counter+0x1>
     540:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <Counter>
     544:	10 92 99 03 	sts	0x0399, r1	; 0x800399 <pointer+0x1>
     548:	10 92 98 03 	sts	0x0398, r1	; 0x800398 <pointer>
     54c:	08 95       	ret

0000054e <Start_Read_Response>:
     54e:	cf 93       	push	r28
     550:	df 93       	push	r29
     552:	ec 01       	movw	r28, r24
     554:	84 e0       	ldi	r24, 0x04	; 4
     556:	80 93 3c 04 	sts	0x043C, r24	; 0x80043c <Response_Status>
     55a:	ce 01       	movw	r24, r28
     55c:	db de       	rcall	.-586    	; 0x314 <Read_Response>
     55e:	80 91 3c 04 	lds	r24, 0x043C	; 0x80043c <Response_Status>
     562:	88 23       	and	r24, r24
     564:	d1 f3       	breq	.-12     	; 0x55a <Start_Read_Response+0xc>
     566:	df 91       	pop	r29
     568:	cf 91       	pop	r28
     56a:	08 95       	ret

0000056c <WaitForExpectedResponse>:
     56c:	f0 df       	rcall	.-32     	; 0x54e <Start_Read_Response>
     56e:	81 e0       	ldi	r24, 0x01	; 1
     570:	90 91 3c 04 	lds	r25, 0x043C	; 0x80043c <Response_Status>
     574:	92 30       	cpi	r25, 0x02	; 2
     576:	09 f4       	brne	.+2      	; 0x57a <WaitForExpectedResponse+0xe>
     578:	80 e0       	ldi	r24, 0x00	; 0
     57a:	08 95       	ret

0000057c <SendATandExpectResponse>:
     57c:	0f 93       	push	r16
     57e:	1f 93       	push	r17
     580:	cf 93       	push	r28
     582:	df 93       	push	r29
     584:	8c 01       	movw	r16, r24
     586:	eb 01       	movw	r28, r22
     588:	d2 df       	rcall	.-92     	; 0x52e <ESP8266_Clear>
     58a:	c8 01       	movw	r24, r16
     58c:	9b d2       	rcall	.+1334   	; 0xac4 <USART_SendString>
     58e:	89 e7       	ldi	r24, 0x79	; 121
     590:	92 e0       	ldi	r25, 0x02	; 2
     592:	98 d2       	rcall	.+1328   	; 0xac4 <USART_SendString>
     594:	ce 01       	movw	r24, r28
     596:	ea df       	rcall	.-44     	; 0x56c <WaitForExpectedResponse>
     598:	df 91       	pop	r29
     59a:	cf 91       	pop	r28
     59c:	1f 91       	pop	r17
     59e:	0f 91       	pop	r16
     5a0:	08 95       	ret

000005a2 <ESP8266_ApplicationMode>:
     5a2:	0f 93       	push	r16
     5a4:	1f 93       	push	r17
     5a6:	cf 93       	push	r28
     5a8:	df 93       	push	r29
     5aa:	cd b7       	in	r28, 0x3d	; 61
     5ac:	de b7       	in	r29, 0x3e	; 62
     5ae:	64 97       	sbiw	r28, 0x14	; 20
     5b0:	0f b6       	in	r0, 0x3f	; 63
     5b2:	f8 94       	cli
     5b4:	de bf       	out	0x3e, r29	; 62
     5b6:	0f be       	out	0x3f, r0	; 63
     5b8:	cd bf       	out	0x3d, r28	; 61
     5ba:	8e 01       	movw	r16, r28
     5bc:	0f 5f       	subi	r16, 0xFF	; 255
     5be:	1f 4f       	sbci	r17, 0xFF	; 255
     5c0:	94 e1       	ldi	r25, 0x14	; 20
     5c2:	f8 01       	movw	r30, r16
     5c4:	11 92       	st	Z+, r1
     5c6:	9a 95       	dec	r25
     5c8:	e9 f7       	brne	.-6      	; 0x5c4 <ESP8266_ApplicationMode+0x22>
     5ca:	1f 92       	push	r1
     5cc:	8f 93       	push	r24
     5ce:	88 e1       	ldi	r24, 0x18	; 24
     5d0:	92 e0       	ldi	r25, 0x02	; 2
     5d2:	9f 93       	push	r25
     5d4:	8f 93       	push	r24
     5d6:	1f 93       	push	r17
     5d8:	0f 93       	push	r16
     5da:	24 d5       	rcall	.+2632   	; 0x1024 <sprintf>
     5dc:	1c 8a       	std	Y+20, r1	; 0x14
     5de:	61 e1       	ldi	r22, 0x11	; 17
     5e0:	72 e0       	ldi	r23, 0x02	; 2
     5e2:	c8 01       	movw	r24, r16
     5e4:	cb df       	rcall	.-106    	; 0x57c <SendATandExpectResponse>
     5e6:	0f 90       	pop	r0
     5e8:	0f 90       	pop	r0
     5ea:	0f 90       	pop	r0
     5ec:	0f 90       	pop	r0
     5ee:	0f 90       	pop	r0
     5f0:	0f 90       	pop	r0
     5f2:	64 96       	adiw	r28, 0x14	; 20
     5f4:	0f b6       	in	r0, 0x3f	; 63
     5f6:	f8 94       	cli
     5f8:	de bf       	out	0x3e, r29	; 62
     5fa:	0f be       	out	0x3f, r0	; 63
     5fc:	cd bf       	out	0x3d, r28	; 61
     5fe:	df 91       	pop	r29
     600:	cf 91       	pop	r28
     602:	1f 91       	pop	r17
     604:	0f 91       	pop	r16
     606:	08 95       	ret

00000608 <ESP8266_ConnectionMode>:
     608:	0f 93       	push	r16
     60a:	1f 93       	push	r17
     60c:	cf 93       	push	r28
     60e:	df 93       	push	r29
     610:	cd b7       	in	r28, 0x3d	; 61
     612:	de b7       	in	r29, 0x3e	; 62
     614:	64 97       	sbiw	r28, 0x14	; 20
     616:	0f b6       	in	r0, 0x3f	; 63
     618:	f8 94       	cli
     61a:	de bf       	out	0x3e, r29	; 62
     61c:	0f be       	out	0x3f, r0	; 63
     61e:	cd bf       	out	0x3d, r28	; 61
     620:	8e 01       	movw	r16, r28
     622:	0f 5f       	subi	r16, 0xFF	; 255
     624:	1f 4f       	sbci	r17, 0xFF	; 255
     626:	94 e1       	ldi	r25, 0x14	; 20
     628:	f8 01       	movw	r30, r16
     62a:	11 92       	st	Z+, r1
     62c:	9a 95       	dec	r25
     62e:	e9 f7       	brne	.-6      	; 0x62a <ESP8266_ConnectionMode+0x22>
     630:	1f 92       	push	r1
     632:	8f 93       	push	r24
     634:	86 e2       	ldi	r24, 0x26	; 38
     636:	92 e0       	ldi	r25, 0x02	; 2
     638:	9f 93       	push	r25
     63a:	8f 93       	push	r24
     63c:	1f 93       	push	r17
     63e:	0f 93       	push	r16
     640:	f1 d4       	rcall	.+2530   	; 0x1024 <sprintf>
     642:	1c 8a       	std	Y+20, r1	; 0x14
     644:	61 e1       	ldi	r22, 0x11	; 17
     646:	72 e0       	ldi	r23, 0x02	; 2
     648:	c8 01       	movw	r24, r16
     64a:	98 df       	rcall	.-208    	; 0x57c <SendATandExpectResponse>
     64c:	0f 90       	pop	r0
     64e:	0f 90       	pop	r0
     650:	0f 90       	pop	r0
     652:	0f 90       	pop	r0
     654:	0f 90       	pop	r0
     656:	0f 90       	pop	r0
     658:	64 96       	adiw	r28, 0x14	; 20
     65a:	0f b6       	in	r0, 0x3f	; 63
     65c:	f8 94       	cli
     65e:	de bf       	out	0x3e, r29	; 62
     660:	0f be       	out	0x3f, r0	; 63
     662:	cd bf       	out	0x3d, r28	; 61
     664:	df 91       	pop	r29
     666:	cf 91       	pop	r28
     668:	1f 91       	pop	r17
     66a:	0f 91       	pop	r16
     66c:	08 95       	ret

0000066e <ESP8266_Begin>:
     66e:	cf 93       	push	r28
     670:	c5 e0       	ldi	r28, 0x05	; 5
     672:	61 e1       	ldi	r22, 0x11	; 17
     674:	72 e0       	ldi	r23, 0x02	; 2
     676:	83 e3       	ldi	r24, 0x33	; 51
     678:	92 e0       	ldi	r25, 0x02	; 2
     67a:	80 df       	rcall	.-256    	; 0x57c <SendATandExpectResponse>
     67c:	81 11       	cpse	r24, r1
     67e:	09 c0       	rjmp	.+18     	; 0x692 <ESP8266_Begin+0x24>
     680:	61 e1       	ldi	r22, 0x11	; 17
     682:	72 e0       	ldi	r23, 0x02	; 2
     684:	88 e3       	ldi	r24, 0x38	; 56
     686:	92 e0       	ldi	r25, 0x02	; 2
     688:	79 df       	rcall	.-270    	; 0x57c <SendATandExpectResponse>
     68a:	81 11       	cpse	r24, r1
     68c:	02 c0       	rjmp	.+4      	; 0x692 <ESP8266_Begin+0x24>
     68e:	c1 50       	subi	r28, 0x01	; 1
     690:	81 f7       	brne	.-32     	; 0x672 <ESP8266_Begin+0x4>
     692:	cf 91       	pop	r28
     694:	08 95       	ret

00000696 <ESP8266_WIFIMode>:
     696:	0f 93       	push	r16
     698:	1f 93       	push	r17
     69a:	cf 93       	push	r28
     69c:	df 93       	push	r29
     69e:	cd b7       	in	r28, 0x3d	; 61
     6a0:	de b7       	in	r29, 0x3e	; 62
     6a2:	64 97       	sbiw	r28, 0x14	; 20
     6a4:	0f b6       	in	r0, 0x3f	; 63
     6a6:	f8 94       	cli
     6a8:	de bf       	out	0x3e, r29	; 62
     6aa:	0f be       	out	0x3f, r0	; 63
     6ac:	cd bf       	out	0x3d, r28	; 61
     6ae:	8e 01       	movw	r16, r28
     6b0:	0f 5f       	subi	r16, 0xFF	; 255
     6b2:	1f 4f       	sbci	r17, 0xFF	; 255
     6b4:	94 e1       	ldi	r25, 0x14	; 20
     6b6:	f8 01       	movw	r30, r16
     6b8:	11 92       	st	Z+, r1
     6ba:	9a 95       	dec	r25
     6bc:	e9 f7       	brne	.-6      	; 0x6b8 <ESP8266_WIFIMode+0x22>
     6be:	1f 92       	push	r1
     6c0:	8f 93       	push	r24
     6c2:	89 e4       	ldi	r24, 0x49	; 73
     6c4:	92 e0       	ldi	r25, 0x02	; 2
     6c6:	9f 93       	push	r25
     6c8:	8f 93       	push	r24
     6ca:	1f 93       	push	r17
     6cc:	0f 93       	push	r16
     6ce:	aa d4       	rcall	.+2388   	; 0x1024 <sprintf>
     6d0:	1c 8a       	std	Y+20, r1	; 0x14
     6d2:	61 e1       	ldi	r22, 0x11	; 17
     6d4:	72 e0       	ldi	r23, 0x02	; 2
     6d6:	c8 01       	movw	r24, r16
     6d8:	51 df       	rcall	.-350    	; 0x57c <SendATandExpectResponse>
     6da:	0f 90       	pop	r0
     6dc:	0f 90       	pop	r0
     6de:	0f 90       	pop	r0
     6e0:	0f 90       	pop	r0
     6e2:	0f 90       	pop	r0
     6e4:	0f 90       	pop	r0
     6e6:	64 96       	adiw	r28, 0x14	; 20
     6e8:	0f b6       	in	r0, 0x3f	; 63
     6ea:	f8 94       	cli
     6ec:	de bf       	out	0x3e, r29	; 62
     6ee:	0f be       	out	0x3f, r0	; 63
     6f0:	cd bf       	out	0x3d, r28	; 61
     6f2:	df 91       	pop	r29
     6f4:	cf 91       	pop	r28
     6f6:	1f 91       	pop	r17
     6f8:	0f 91       	pop	r16
     6fa:	08 95       	ret

000006fc <ESP8266_JoinAccessPoint>:
     6fc:	0f 93       	push	r16
     6fe:	1f 93       	push	r17
     700:	cf 93       	push	r28
     702:	df 93       	push	r29
     704:	cd b7       	in	r28, 0x3d	; 61
     706:	de b7       	in	r29, 0x3e	; 62
     708:	ec 97       	sbiw	r28, 0x3c	; 60
     70a:	0f b6       	in	r0, 0x3f	; 63
     70c:	f8 94       	cli
     70e:	de bf       	out	0x3e, r29	; 62
     710:	0f be       	out	0x3f, r0	; 63
     712:	cd bf       	out	0x3d, r28	; 61
     714:	8e 01       	movw	r16, r28
     716:	0f 5f       	subi	r16, 0xFF	; 255
     718:	1f 4f       	sbci	r17, 0xFF	; 255
     71a:	2c e3       	ldi	r18, 0x3C	; 60
     71c:	f8 01       	movw	r30, r16
     71e:	11 92       	st	Z+, r1
     720:	2a 95       	dec	r18
     722:	e9 f7       	brne	.-6      	; 0x71e <ESP8266_JoinAccessPoint+0x22>
     724:	7f 93       	push	r23
     726:	6f 93       	push	r22
     728:	9f 93       	push	r25
     72a:	8f 93       	push	r24
     72c:	86 e5       	ldi	r24, 0x56	; 86
     72e:	92 e0       	ldi	r25, 0x02	; 2
     730:	9f 93       	push	r25
     732:	8f 93       	push	r24
     734:	1f 93       	push	r17
     736:	0f 93       	push	r16
     738:	75 d4       	rcall	.+2282   	; 0x1024 <sprintf>
     73a:	1c ae       	std	Y+60, r1	; 0x3c
     73c:	69 e6       	ldi	r22, 0x69	; 105
     73e:	72 e0       	ldi	r23, 0x02	; 2
     740:	c8 01       	movw	r24, r16
     742:	1c df       	rcall	.-456    	; 0x57c <SendATandExpectResponse>
     744:	0f b6       	in	r0, 0x3f	; 63
     746:	f8 94       	cli
     748:	de bf       	out	0x3e, r29	; 62
     74a:	0f be       	out	0x3f, r0	; 63
     74c:	cd bf       	out	0x3d, r28	; 61
     74e:	81 11       	cpse	r24, r1
     750:	1e c0       	rjmp	.+60     	; 0x78e <ESP8266_JoinAccessPoint+0x92>
     752:	6c e7       	ldi	r22, 0x7C	; 124
     754:	72 e0       	ldi	r23, 0x02	; 2
     756:	8c e9       	ldi	r24, 0x9C	; 156
     758:	93 e0       	ldi	r25, 0x03	; 3
     75a:	4a d4       	rcall	.+2196   	; 0xff0 <strstr>
     75c:	89 2b       	or	r24, r25
     75e:	c9 f4       	brne	.+50     	; 0x792 <ESP8266_JoinAccessPoint+0x96>
     760:	65 e8       	ldi	r22, 0x85	; 133
     762:	72 e0       	ldi	r23, 0x02	; 2
     764:	8c e9       	ldi	r24, 0x9C	; 156
     766:	93 e0       	ldi	r25, 0x03	; 3
     768:	43 d4       	rcall	.+2182   	; 0xff0 <strstr>
     76a:	89 2b       	or	r24, r25
     76c:	a1 f4       	brne	.+40     	; 0x796 <ESP8266_JoinAccessPoint+0x9a>
     76e:	6e e8       	ldi	r22, 0x8E	; 142
     770:	72 e0       	ldi	r23, 0x02	; 2
     772:	8c e9       	ldi	r24, 0x9C	; 156
     774:	93 e0       	ldi	r25, 0x03	; 3
     776:	3c d4       	rcall	.+2168   	; 0xff0 <strstr>
     778:	89 2b       	or	r24, r25
     77a:	79 f4       	brne	.+30     	; 0x79a <ESP8266_JoinAccessPoint+0x9e>
     77c:	67 e9       	ldi	r22, 0x97	; 151
     77e:	72 e0       	ldi	r23, 0x02	; 2
     780:	8c e9       	ldi	r24, 0x9C	; 156
     782:	93 e0       	ldi	r25, 0x03	; 3
     784:	35 d4       	rcall	.+2154   	; 0xff0 <strstr>
     786:	89 2b       	or	r24, r25
     788:	51 f4       	brne	.+20     	; 0x79e <ESP8266_JoinAccessPoint+0xa2>
     78a:	85 e0       	ldi	r24, 0x05	; 5
     78c:	09 c0       	rjmp	.+18     	; 0x7a0 <ESP8266_JoinAccessPoint+0xa4>
     78e:	80 e0       	ldi	r24, 0x00	; 0
     790:	07 c0       	rjmp	.+14     	; 0x7a0 <ESP8266_JoinAccessPoint+0xa4>
     792:	81 e0       	ldi	r24, 0x01	; 1
     794:	05 c0       	rjmp	.+10     	; 0x7a0 <ESP8266_JoinAccessPoint+0xa4>
     796:	82 e0       	ldi	r24, 0x02	; 2
     798:	03 c0       	rjmp	.+6      	; 0x7a0 <ESP8266_JoinAccessPoint+0xa4>
     79a:	83 e0       	ldi	r24, 0x03	; 3
     79c:	01 c0       	rjmp	.+2      	; 0x7a0 <ESP8266_JoinAccessPoint+0xa4>
     79e:	84 e0       	ldi	r24, 0x04	; 4
     7a0:	ec 96       	adiw	r28, 0x3c	; 60
     7a2:	0f b6       	in	r0, 0x3f	; 63
     7a4:	f8 94       	cli
     7a6:	de bf       	out	0x3e, r29	; 62
     7a8:	0f be       	out	0x3f, r0	; 63
     7aa:	cd bf       	out	0x3d, r28	; 61
     7ac:	df 91       	pop	r29
     7ae:	cf 91       	pop	r28
     7b0:	1f 91       	pop	r17
     7b2:	0f 91       	pop	r16
     7b4:	08 95       	ret

000007b6 <ESP8266_connected>:
     7b6:	61 e1       	ldi	r22, 0x11	; 17
     7b8:	72 e0       	ldi	r23, 0x02	; 2
     7ba:	80 ea       	ldi	r24, 0xA0	; 160
     7bc:	92 e0       	ldi	r25, 0x02	; 2
     7be:	de de       	rcall	.-580    	; 0x57c <SendATandExpectResponse>
     7c0:	6d ea       	ldi	r22, 0xAD	; 173
     7c2:	72 e0       	ldi	r23, 0x02	; 2
     7c4:	8c e9       	ldi	r24, 0x9C	; 156
     7c6:	93 e0       	ldi	r25, 0x03	; 3
     7c8:	13 d4       	rcall	.+2086   	; 0xff0 <strstr>
     7ca:	89 2b       	or	r24, r25
     7cc:	b9 f4       	brne	.+46     	; 0x7fc <ESP8266_connected+0x46>
     7ce:	66 eb       	ldi	r22, 0xB6	; 182
     7d0:	72 e0       	ldi	r23, 0x02	; 2
     7d2:	8c e9       	ldi	r24, 0x9C	; 156
     7d4:	93 e0       	ldi	r25, 0x03	; 3
     7d6:	0c d4       	rcall	.+2072   	; 0xff0 <strstr>
     7d8:	89 2b       	or	r24, r25
     7da:	91 f4       	brne	.+36     	; 0x800 <ESP8266_connected+0x4a>
     7dc:	6f eb       	ldi	r22, 0xBF	; 191
     7de:	72 e0       	ldi	r23, 0x02	; 2
     7e0:	8c e9       	ldi	r24, 0x9C	; 156
     7e2:	93 e0       	ldi	r25, 0x03	; 3
     7e4:	05 d4       	rcall	.+2058   	; 0xff0 <strstr>
     7e6:	89 2b       	or	r24, r25
     7e8:	69 f4       	brne	.+26     	; 0x804 <ESP8266_connected+0x4e>
     7ea:	68 ec       	ldi	r22, 0xC8	; 200
     7ec:	72 e0       	ldi	r23, 0x02	; 2
     7ee:	8c e9       	ldi	r24, 0x9C	; 156
     7f0:	93 e0       	ldi	r25, 0x03	; 3
     7f2:	fe d3       	rcall	.+2044   	; 0xff0 <strstr>
     7f4:	89 2b       	or	r24, r25
     7f6:	41 f4       	brne	.+16     	; 0x808 <ESP8266_connected+0x52>
     7f8:	84 e0       	ldi	r24, 0x04	; 4
     7fa:	08 95       	ret
     7fc:	80 e0       	ldi	r24, 0x00	; 0
     7fe:	08 95       	ret
     800:	81 e0       	ldi	r24, 0x01	; 1
     802:	08 95       	ret
     804:	82 e0       	ldi	r24, 0x02	; 2
     806:	08 95       	ret
     808:	83 e0       	ldi	r24, 0x03	; 3
     80a:	08 95       	ret

0000080c <ESP8266_Start>:
     80c:	df 92       	push	r13
     80e:	ef 92       	push	r14
     810:	ff 92       	push	r15
     812:	0f 93       	push	r16
     814:	1f 93       	push	r17
     816:	cf 93       	push	r28
     818:	df 93       	push	r29
     81a:	cd b7       	in	r28, 0x3d	; 61
     81c:	de b7       	in	r29, 0x3e	; 62
     81e:	ec 97       	sbiw	r28, 0x3c	; 60
     820:	0f b6       	in	r0, 0x3f	; 63
     822:	f8 94       	cli
     824:	de bf       	out	0x3e, r29	; 62
     826:	0f be       	out	0x3f, r0	; 63
     828:	cd bf       	out	0x3d, r28	; 61
     82a:	d8 2e       	mov	r13, r24
     82c:	16 2f       	mov	r17, r22
     82e:	07 2f       	mov	r16, r23
     830:	f4 2e       	mov	r15, r20
     832:	e5 2e       	mov	r14, r21
     834:	fe 01       	movw	r30, r28
     836:	31 96       	adiw	r30, 0x01	; 1
     838:	8c e3       	ldi	r24, 0x3C	; 60
     83a:	df 01       	movw	r26, r30
     83c:	1d 92       	st	X+, r1
     83e:	8a 95       	dec	r24
     840:	e9 f7       	brne	.-6      	; 0x83c <ESP8266_Start+0x30>
     842:	61 ed       	ldi	r22, 0xD1	; 209
     844:	72 e0       	ldi	r23, 0x02	; 2
     846:	8a ed       	ldi	r24, 0xDA	; 218
     848:	92 e0       	ldi	r25, 0x02	; 2
     84a:	98 de       	rcall	.-720    	; 0x57c <SendATandExpectResponse>
     84c:	88 23       	and	r24, r24
     84e:	99 f0       	breq	.+38     	; 0x876 <ESP8266_Start+0x6a>
     850:	ef 92       	push	r14
     852:	ff 92       	push	r15
     854:	0f 93       	push	r16
     856:	1f 93       	push	r17
     858:	85 ee       	ldi	r24, 0xE5	; 229
     85a:	92 e0       	ldi	r25, 0x02	; 2
     85c:	9f 93       	push	r25
     85e:	8f 93       	push	r24
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	9f 93       	push	r25
     866:	8f 93       	push	r24
     868:	dd d3       	rcall	.+1978   	; 0x1024 <sprintf>
     86a:	0f b6       	in	r0, 0x3f	; 63
     86c:	f8 94       	cli
     86e:	de bf       	out	0x3e, r29	; 62
     870:	0f be       	out	0x3f, r0	; 63
     872:	cd bf       	out	0x3d, r28	; 61
     874:	14 c0       	rjmp	.+40     	; 0x89e <ESP8266_Start+0x92>
     876:	ef 92       	push	r14
     878:	ff 92       	push	r15
     87a:	0f 93       	push	r16
     87c:	1f 93       	push	r17
     87e:	1f 92       	push	r1
     880:	df 92       	push	r13
     882:	8f ef       	ldi	r24, 0xFF	; 255
     884:	92 e0       	ldi	r25, 0x02	; 2
     886:	9f 93       	push	r25
     888:	8f 93       	push	r24
     88a:	ce 01       	movw	r24, r28
     88c:	01 96       	adiw	r24, 0x01	; 1
     88e:	9f 93       	push	r25
     890:	8f 93       	push	r24
     892:	c8 d3       	rcall	.+1936   	; 0x1024 <sprintf>
     894:	0f b6       	in	r0, 0x3f	; 63
     896:	f8 94       	cli
     898:	de bf       	out	0x3e, r29	; 62
     89a:	0f be       	out	0x3f, r0	; 63
     89c:	cd bf       	out	0x3d, r28	; 61
     89e:	6e e1       	ldi	r22, 0x1E	; 30
     8a0:	73 e0       	ldi	r23, 0x03	; 3
     8a2:	ce 01       	movw	r24, r28
     8a4:	01 96       	adiw	r24, 0x01	; 1
     8a6:	6a de       	rcall	.-812    	; 0x57c <SendATandExpectResponse>
     8a8:	81 11       	cpse	r24, r1
     8aa:	06 c0       	rjmp	.+12     	; 0x8b8 <ESP8266_Start+0xac>
     8ac:	80 91 3c 04 	lds	r24, 0x043C	; 0x80043c <Response_Status>
     8b0:	82 30       	cpi	r24, 0x02	; 2
     8b2:	21 f0       	breq	.+8      	; 0x8bc <ESP8266_Start+0xb0>
     8b4:	85 e0       	ldi	r24, 0x05	; 5
     8b6:	03 c0       	rjmp	.+6      	; 0x8be <ESP8266_Start+0xb2>
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	01 c0       	rjmp	.+2      	; 0x8be <ESP8266_Start+0xb2>
     8bc:	82 e0       	ldi	r24, 0x02	; 2
     8be:	ec 96       	adiw	r28, 0x3c	; 60
     8c0:	0f b6       	in	r0, 0x3f	; 63
     8c2:	f8 94       	cli
     8c4:	de bf       	out	0x3e, r29	; 62
     8c6:	0f be       	out	0x3f, r0	; 63
     8c8:	cd bf       	out	0x3d, r28	; 61
     8ca:	df 91       	pop	r29
     8cc:	cf 91       	pop	r28
     8ce:	1f 91       	pop	r17
     8d0:	0f 91       	pop	r16
     8d2:	ff 90       	pop	r15
     8d4:	ef 90       	pop	r14
     8d6:	df 90       	pop	r13
     8d8:	08 95       	ret

000008da <ESP8266_Send>:
     8da:	ef 92       	push	r14
     8dc:	ff 92       	push	r15
     8de:	0f 93       	push	r16
     8e0:	1f 93       	push	r17
     8e2:	cf 93       	push	r28
     8e4:	df 93       	push	r29
     8e6:	cd b7       	in	r28, 0x3d	; 61
     8e8:	de b7       	in	r29, 0x3e	; 62
     8ea:	64 97       	sbiw	r28, 0x14	; 20
     8ec:	0f b6       	in	r0, 0x3f	; 63
     8ee:	f8 94       	cli
     8f0:	de bf       	out	0x3e, r29	; 62
     8f2:	0f be       	out	0x3f, r0	; 63
     8f4:	cd bf       	out	0x3d, r28	; 61
     8f6:	8c 01       	movw	r16, r24
     8f8:	ce 01       	movw	r24, r28
     8fa:	01 96       	adiw	r24, 0x01	; 1
     8fc:	7c 01       	movw	r14, r24
     8fe:	84 e1       	ldi	r24, 0x14	; 20
     900:	f7 01       	movw	r30, r14
     902:	11 92       	st	Z+, r1
     904:	8a 95       	dec	r24
     906:	e9 f7       	brne	.-6      	; 0x902 <ESP8266_Send+0x28>
     908:	f8 01       	movw	r30, r16
     90a:	01 90       	ld	r0, Z+
     90c:	00 20       	and	r0, r0
     90e:	e9 f7       	brne	.-6      	; 0x90a <ESP8266_Send+0x30>
     910:	cf 01       	movw	r24, r30
     912:	80 1b       	sub	r24, r16
     914:	91 0b       	sbc	r25, r17
     916:	01 96       	adiw	r24, 0x01	; 1
     918:	9f 93       	push	r25
     91a:	8f 93       	push	r24
     91c:	88 e2       	ldi	r24, 0x28	; 40
     91e:	93 e0       	ldi	r25, 0x03	; 3
     920:	9f 93       	push	r25
     922:	8f 93       	push	r24
     924:	ff 92       	push	r15
     926:	ef 92       	push	r14
     928:	7d d3       	rcall	.+1786   	; 0x1024 <sprintf>
     92a:	1c 8a       	std	Y+20, r1	; 0x14
     92c:	66 e3       	ldi	r22, 0x36	; 54
     92e:	73 e0       	ldi	r23, 0x03	; 3
     930:	c7 01       	movw	r24, r14
     932:	24 de       	rcall	.-952    	; 0x57c <SendATandExpectResponse>
     934:	6e e3       	ldi	r22, 0x3E	; 62
     936:	73 e0       	ldi	r23, 0x03	; 3
     938:	c8 01       	movw	r24, r16
     93a:	20 de       	rcall	.-960    	; 0x57c <SendATandExpectResponse>
     93c:	0f 90       	pop	r0
     93e:	0f 90       	pop	r0
     940:	0f 90       	pop	r0
     942:	0f 90       	pop	r0
     944:	0f 90       	pop	r0
     946:	0f 90       	pop	r0
     948:	81 11       	cpse	r24, r1
     94a:	06 c0       	rjmp	.+12     	; 0x958 <ESP8266_Send+0x7e>
     94c:	80 91 3c 04 	lds	r24, 0x043C	; 0x80043c <Response_Status>
     950:	82 30       	cpi	r24, 0x02	; 2
     952:	21 f0       	breq	.+8      	; 0x95c <ESP8266_Send+0x82>
     954:	85 e0       	ldi	r24, 0x05	; 5
     956:	03 c0       	rjmp	.+6      	; 0x95e <ESP8266_Send+0x84>
     958:	81 e0       	ldi	r24, 0x01	; 1
     95a:	01 c0       	rjmp	.+2      	; 0x95e <ESP8266_Send+0x84>
     95c:	82 e0       	ldi	r24, 0x02	; 2
     95e:	64 96       	adiw	r28, 0x14	; 20
     960:	0f b6       	in	r0, 0x3f	; 63
     962:	f8 94       	cli
     964:	de bf       	out	0x3e, r29	; 62
     966:	0f be       	out	0x3f, r0	; 63
     968:	cd bf       	out	0x3d, r28	; 61
     96a:	df 91       	pop	r29
     96c:	cf 91       	pop	r28
     96e:	1f 91       	pop	r17
     970:	0f 91       	pop	r16
     972:	ff 90       	pop	r15
     974:	ef 90       	pop	r14
     976:	08 95       	ret

00000978 <__vector_36>:

ISR (USART1_RX_vect)
{
     978:	1f 92       	push	r1
     97a:	0f 92       	push	r0
     97c:	0f b6       	in	r0, 0x3f	; 63
     97e:	0f 92       	push	r0
     980:	11 24       	eor	r1, r1
     982:	0b b6       	in	r0, 0x3b	; 59
     984:	0f 92       	push	r0
     986:	2f 93       	push	r18
     988:	8f 93       	push	r24
     98a:	9f 93       	push	r25
     98c:	ef 93       	push	r30
     98e:	ff 93       	push	r31
	uint8_t oldsrg = SREG;
     990:	2f b7       	in	r18, 0x3f	; 63
	cli();
     992:	f8 94       	cli
	RESPONSE_BUFFER[Counter] = UDR1;
     994:	e0 91 9a 03 	lds	r30, 0x039A	; 0x80039a <Counter>
     998:	f0 91 9b 03 	lds	r31, 0x039B	; 0x80039b <Counter+0x1>
     99c:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     9a0:	e4 56       	subi	r30, 0x64	; 100
     9a2:	fc 4f       	sbci	r31, 0xFC	; 252
     9a4:	80 83       	st	Z, r24
	Counter++;
     9a6:	80 91 9a 03 	lds	r24, 0x039A	; 0x80039a <Counter>
     9aa:	90 91 9b 03 	lds	r25, 0x039B	; 0x80039b <Counter+0x1>
     9ae:	01 96       	adiw	r24, 0x01	; 1
     9b0:	90 93 9b 03 	sts	0x039B, r25	; 0x80039b <Counter+0x1>
     9b4:	80 93 9a 03 	sts	0x039A, r24	; 0x80039a <Counter>
	if(Counter == DEFAULT_BUFFER_SIZE){
     9b8:	80 91 9a 03 	lds	r24, 0x039A	; 0x80039a <Counter>
     9bc:	90 91 9b 03 	lds	r25, 0x039B	; 0x80039b <Counter+0x1>
     9c0:	80 3a       	cpi	r24, 0xA0	; 160
     9c2:	91 05       	cpc	r25, r1
     9c4:	41 f4       	brne	.+16     	; 0x9d6 <__vector_36+0x5e>
		Counter = 0; pointer = 0;
     9c6:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <Counter+0x1>
     9ca:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <Counter>
     9ce:	10 92 99 03 	sts	0x0399, r1	; 0x800399 <pointer+0x1>
     9d2:	10 92 98 03 	sts	0x0398, r1	; 0x800398 <pointer>
	}
	SREG = oldsrg;
     9d6:	2f bf       	out	0x3f, r18	; 63
}
     9d8:	ff 91       	pop	r31
     9da:	ef 91       	pop	r30
     9dc:	9f 91       	pop	r25
     9de:	8f 91       	pop	r24
     9e0:	2f 91       	pop	r18
     9e2:	0f 90       	pop	r0
     9e4:	0b be       	out	0x3b, r0	; 59
     9e6:	0f 90       	pop	r0
     9e8:	0f be       	out	0x3f, r0	; 63
     9ea:	0f 90       	pop	r0
     9ec:	1f 90       	pop	r1
     9ee:	18 95       	reti

000009f0 <ESP8266_TRANSMIT>:

void ESP8266_TRANSMIT(int data, int field, char * buffer)
{
     9f0:	ef 92       	push	r14
     9f2:	ff 92       	push	r15
     9f4:	0f 93       	push	r16
     9f6:	1f 93       	push	r17
     9f8:	cf 93       	push	r28
     9fa:	df 93       	push	r29
     9fc:	f8 2e       	mov	r15, r24
     9fe:	e9 2e       	mov	r14, r25
     a00:	16 2f       	mov	r17, r22
     a02:	07 2f       	mov	r16, r23
     a04:	d4 2f       	mov	r29, r20
     a06:	c5 2f       	mov	r28, r21
	ESP8266_Start(0, DOMAIN, PORT);
     a08:	4a e4       	ldi	r20, 0x4A	; 74
     a0a:	53 e0       	ldi	r21, 0x03	; 3
     a0c:	6d e4       	ldi	r22, 0x4D	; 77
     a0e:	73 e0       	ldi	r23, 0x03	; 3
     a10:	80 e0       	ldi	r24, 0x00	; 0
     a12:	fc de       	rcall	.-520    	; 0x80c <ESP8266_Start>
	memset(buffer, 0, 150);
     a14:	ed 2f       	mov	r30, r29
     a16:	fc 2f       	mov	r31, r28
     a18:	86 e9       	ldi	r24, 0x96	; 150
     a1a:	df 01       	movw	r26, r30
     a1c:	1d 92       	st	X+, r1
     a1e:	8a 95       	dec	r24
     a20:	e9 f7       	brne	.-6      	; 0xa1c <ESP8266_TRANSMIT+0x2c>
	sprintf(buffer, "GET /update?api_key=%s&field%d=%d", API_WRITE_KEY, field, data);
     a22:	ef 92       	push	r14
     a24:	ff 92       	push	r15
     a26:	0f 93       	push	r16
     a28:	1f 93       	push	r17
     a2a:	80 e6       	ldi	r24, 0x60	; 96
     a2c:	93 e0       	ldi	r25, 0x03	; 3
     a2e:	9f 93       	push	r25
     a30:	8f 93       	push	r24
     a32:	81 e7       	ldi	r24, 0x71	; 113
     a34:	93 e0       	ldi	r25, 0x03	; 3
     a36:	9f 93       	push	r25
     a38:	8f 93       	push	r24
     a3a:	cf 93       	push	r28
     a3c:	df 93       	push	r29
     a3e:	f2 d2       	rcall	.+1508   	; 0x1024 <sprintf>
	ESP8266_Send(buffer);
     a40:	8d 2f       	mov	r24, r29
     a42:	9c 2f       	mov	r25, r28
     a44:	4a df       	rcall	.-364    	; 0x8da <ESP8266_Send>
     a46:	8d b7       	in	r24, 0x3d	; 61
     a48:	9e b7       	in	r25, 0x3e	; 62
     a4a:	0a 96       	adiw	r24, 0x0a	; 10
     a4c:	0f b6       	in	r0, 0x3f	; 63
     a4e:	f8 94       	cli
     a50:	9e bf       	out	0x3e, r25	; 62
     a52:	0f be       	out	0x3f, r0	; 63
     a54:	8d bf       	out	0x3d, r24	; 61
     a56:	df 91       	pop	r29
     a58:	cf 91       	pop	r28
     a5a:	1f 91       	pop	r17
     a5c:	0f 91       	pop	r16
     a5e:	ff 90       	pop	r15
     a60:	ef 90       	pop	r14
     a62:	08 95       	ret

00000a64 <USART_Init>:

char USART_RxChar()									/* Data receiving function */
{
	while (!(UCSR1A & (1 << RXC1)));					/* Wait until new data receive */
	return(UDR1);									/* Get and return received data */ 
}
     a64:	e8 ec       	ldi	r30, 0xC8	; 200
     a66:	f0 e0       	ldi	r31, 0x00	; 0
     a68:	20 81       	ld	r18, Z
     a6a:	22 60       	ori	r18, 0x02	; 2
     a6c:	20 83       	st	Z, r18
     a6e:	e9 ec       	ldi	r30, 0xC9	; 201
     a70:	f0 e0       	ldi	r31, 0x00	; 0
     a72:	20 81       	ld	r18, Z
     a74:	28 69       	ori	r18, 0x98	; 152
     a76:	20 83       	st	Z, r18
     a78:	ea ec       	ldi	r30, 0xCA	; 202
     a7a:	f0 e0       	ldi	r31, 0x00	; 0
     a7c:	20 81       	ld	r18, Z
     a7e:	24 60       	ori	r18, 0x04	; 4
     a80:	20 83       	st	Z, r18
     a82:	2c d1       	rcall	.+600    	; 0xcdc <__floatunsisf>
     a84:	20 e0       	ldi	r18, 0x00	; 0
     a86:	30 e0       	ldi	r19, 0x00	; 0
     a88:	40 e0       	ldi	r20, 0x00	; 0
     a8a:	51 e4       	ldi	r21, 0x41	; 65
     a8c:	b9 d1       	rcall	.+882    	; 0xe00 <__mulsf3>
     a8e:	9b 01       	movw	r18, r22
     a90:	ac 01       	movw	r20, r24
     a92:	60 e0       	ldi	r22, 0x00	; 0
     a94:	74 e2       	ldi	r23, 0x24	; 36
     a96:	84 e7       	ldi	r24, 0x74	; 116
     a98:	9b e4       	ldi	r25, 0x4B	; 75
     a9a:	87 d0       	rcall	.+270    	; 0xbaa <__divsf3>
     a9c:	20 e0       	ldi	r18, 0x00	; 0
     a9e:	30 e0       	ldi	r19, 0x00	; 0
     aa0:	40 e8       	ldi	r20, 0x80	; 128
     aa2:	5f e3       	ldi	r21, 0x3F	; 63
     aa4:	1d d0       	rcall	.+58     	; 0xae0 <__subsf3>
     aa6:	0f d2       	rcall	.+1054   	; 0xec6 <round>
     aa8:	e8 d0       	rcall	.+464    	; 0xc7a <__fixsfsi>
     aaa:	60 93 cc 00 	sts	0x00CC, r22	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
     aae:	70 93 cd 00 	sts	0x00CD, r23	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
     ab2:	08 95       	ret

00000ab4 <USART_TxChar>:

void USART_TxChar(char data)						/* Data transmitting function */
{
	UDR1 = data;										/* Write data to be transmitting in UDR */
     ab4:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
	while (!(UCSR1A & (1<<UDRE1)));					/* Wait until data transmit and buffer get empty */
     ab8:	e8 ec       	ldi	r30, 0xC8	; 200
     aba:	f0 e0       	ldi	r31, 0x00	; 0
     abc:	80 81       	ld	r24, Z
     abe:	85 ff       	sbrs	r24, 5
     ac0:	fd cf       	rjmp	.-6      	; 0xabc <USART_TxChar+0x8>
}
     ac2:	08 95       	ret

00000ac4 <USART_SendString>:

void USART_SendString(char *str)					/* Send string of USART data function */ 
{
     ac4:	cf 93       	push	r28
     ac6:	df 93       	push	r29
     ac8:	ec 01       	movw	r28, r24
	int i=0;																	
	while (str[i]!=0)
     aca:	88 81       	ld	r24, Y
     acc:	88 23       	and	r24, r24
     ace:	29 f0       	breq	.+10     	; 0xada <USART_SendString+0x16>
     ad0:	21 96       	adiw	r28, 0x01	; 1
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
     ad2:	f0 df       	rcall	.-32     	; 0xab4 <USART_TxChar>
}

void USART_SendString(char *str)					/* Send string of USART data function */ 
{
	int i=0;																	
	while (str[i]!=0)
     ad4:	89 91       	ld	r24, Y+
     ad6:	81 11       	cpse	r24, r1
     ad8:	fc cf       	rjmp	.-8      	; 0xad2 <USART_SendString+0xe>
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
		i++;
	}
     ada:	df 91       	pop	r29
     adc:	cf 91       	pop	r28
     ade:	08 95       	ret

00000ae0 <__subsf3>:
     ae0:	50 58       	subi	r21, 0x80	; 128

00000ae2 <__addsf3>:
     ae2:	bb 27       	eor	r27, r27
     ae4:	aa 27       	eor	r26, r26
     ae6:	0e d0       	rcall	.+28     	; 0xb04 <__addsf3x>
     ae8:	4d c1       	rjmp	.+666    	; 0xd84 <__fp_round>
     aea:	3e d1       	rcall	.+636    	; 0xd68 <__fp_pscA>
     aec:	30 f0       	brcs	.+12     	; 0xafa <__addsf3+0x18>
     aee:	43 d1       	rcall	.+646    	; 0xd76 <__fp_pscB>
     af0:	20 f0       	brcs	.+8      	; 0xafa <__addsf3+0x18>
     af2:	31 f4       	brne	.+12     	; 0xb00 <__addsf3+0x1e>
     af4:	9f 3f       	cpi	r25, 0xFF	; 255
     af6:	11 f4       	brne	.+4      	; 0xafc <__addsf3+0x1a>
     af8:	1e f4       	brtc	.+6      	; 0xb00 <__addsf3+0x1e>
     afa:	33 c1       	rjmp	.+614    	; 0xd62 <__fp_nan>
     afc:	0e f4       	brtc	.+2      	; 0xb00 <__addsf3+0x1e>
     afe:	e0 95       	com	r30
     b00:	e7 fb       	bst	r30, 7
     b02:	29 c1       	rjmp	.+594    	; 0xd56 <__fp_inf>

00000b04 <__addsf3x>:
     b04:	e9 2f       	mov	r30, r25
     b06:	4f d1       	rcall	.+670    	; 0xda6 <__fp_split3>
     b08:	80 f3       	brcs	.-32     	; 0xaea <__addsf3+0x8>
     b0a:	ba 17       	cp	r27, r26
     b0c:	62 07       	cpc	r22, r18
     b0e:	73 07       	cpc	r23, r19
     b10:	84 07       	cpc	r24, r20
     b12:	95 07       	cpc	r25, r21
     b14:	18 f0       	brcs	.+6      	; 0xb1c <__addsf3x+0x18>
     b16:	71 f4       	brne	.+28     	; 0xb34 <__addsf3x+0x30>
     b18:	9e f5       	brtc	.+102    	; 0xb80 <__addsf3x+0x7c>
     b1a:	67 c1       	rjmp	.+718    	; 0xdea <__fp_zero>
     b1c:	0e f4       	brtc	.+2      	; 0xb20 <__addsf3x+0x1c>
     b1e:	e0 95       	com	r30
     b20:	0b 2e       	mov	r0, r27
     b22:	ba 2f       	mov	r27, r26
     b24:	a0 2d       	mov	r26, r0
     b26:	0b 01       	movw	r0, r22
     b28:	b9 01       	movw	r22, r18
     b2a:	90 01       	movw	r18, r0
     b2c:	0c 01       	movw	r0, r24
     b2e:	ca 01       	movw	r24, r20
     b30:	a0 01       	movw	r20, r0
     b32:	11 24       	eor	r1, r1
     b34:	ff 27       	eor	r31, r31
     b36:	59 1b       	sub	r21, r25
     b38:	99 f0       	breq	.+38     	; 0xb60 <__addsf3x+0x5c>
     b3a:	59 3f       	cpi	r21, 0xF9	; 249
     b3c:	50 f4       	brcc	.+20     	; 0xb52 <__addsf3x+0x4e>
     b3e:	50 3e       	cpi	r21, 0xE0	; 224
     b40:	68 f1       	brcs	.+90     	; 0xb9c <__addsf3x+0x98>
     b42:	1a 16       	cp	r1, r26
     b44:	f0 40       	sbci	r31, 0x00	; 0
     b46:	a2 2f       	mov	r26, r18
     b48:	23 2f       	mov	r18, r19
     b4a:	34 2f       	mov	r19, r20
     b4c:	44 27       	eor	r20, r20
     b4e:	58 5f       	subi	r21, 0xF8	; 248
     b50:	f3 cf       	rjmp	.-26     	; 0xb38 <__addsf3x+0x34>
     b52:	46 95       	lsr	r20
     b54:	37 95       	ror	r19
     b56:	27 95       	ror	r18
     b58:	a7 95       	ror	r26
     b5a:	f0 40       	sbci	r31, 0x00	; 0
     b5c:	53 95       	inc	r21
     b5e:	c9 f7       	brne	.-14     	; 0xb52 <__addsf3x+0x4e>
     b60:	7e f4       	brtc	.+30     	; 0xb80 <__addsf3x+0x7c>
     b62:	1f 16       	cp	r1, r31
     b64:	ba 0b       	sbc	r27, r26
     b66:	62 0b       	sbc	r22, r18
     b68:	73 0b       	sbc	r23, r19
     b6a:	84 0b       	sbc	r24, r20
     b6c:	ba f0       	brmi	.+46     	; 0xb9c <__addsf3x+0x98>
     b6e:	91 50       	subi	r25, 0x01	; 1
     b70:	a1 f0       	breq	.+40     	; 0xb9a <__addsf3x+0x96>
     b72:	ff 0f       	add	r31, r31
     b74:	bb 1f       	adc	r27, r27
     b76:	66 1f       	adc	r22, r22
     b78:	77 1f       	adc	r23, r23
     b7a:	88 1f       	adc	r24, r24
     b7c:	c2 f7       	brpl	.-16     	; 0xb6e <__addsf3x+0x6a>
     b7e:	0e c0       	rjmp	.+28     	; 0xb9c <__addsf3x+0x98>
     b80:	ba 0f       	add	r27, r26
     b82:	62 1f       	adc	r22, r18
     b84:	73 1f       	adc	r23, r19
     b86:	84 1f       	adc	r24, r20
     b88:	48 f4       	brcc	.+18     	; 0xb9c <__addsf3x+0x98>
     b8a:	87 95       	ror	r24
     b8c:	77 95       	ror	r23
     b8e:	67 95       	ror	r22
     b90:	b7 95       	ror	r27
     b92:	f7 95       	ror	r31
     b94:	9e 3f       	cpi	r25, 0xFE	; 254
     b96:	08 f0       	brcs	.+2      	; 0xb9a <__addsf3x+0x96>
     b98:	b3 cf       	rjmp	.-154    	; 0xb00 <__addsf3+0x1e>
     b9a:	93 95       	inc	r25
     b9c:	88 0f       	add	r24, r24
     b9e:	08 f0       	brcs	.+2      	; 0xba2 <__addsf3x+0x9e>
     ba0:	99 27       	eor	r25, r25
     ba2:	ee 0f       	add	r30, r30
     ba4:	97 95       	ror	r25
     ba6:	87 95       	ror	r24
     ba8:	08 95       	ret

00000baa <__divsf3>:
     baa:	0c d0       	rcall	.+24     	; 0xbc4 <__divsf3x>
     bac:	eb c0       	rjmp	.+470    	; 0xd84 <__fp_round>
     bae:	e3 d0       	rcall	.+454    	; 0xd76 <__fp_pscB>
     bb0:	40 f0       	brcs	.+16     	; 0xbc2 <__divsf3+0x18>
     bb2:	da d0       	rcall	.+436    	; 0xd68 <__fp_pscA>
     bb4:	30 f0       	brcs	.+12     	; 0xbc2 <__divsf3+0x18>
     bb6:	21 f4       	brne	.+8      	; 0xbc0 <__divsf3+0x16>
     bb8:	5f 3f       	cpi	r21, 0xFF	; 255
     bba:	19 f0       	breq	.+6      	; 0xbc2 <__divsf3+0x18>
     bbc:	cc c0       	rjmp	.+408    	; 0xd56 <__fp_inf>
     bbe:	51 11       	cpse	r21, r1
     bc0:	15 c1       	rjmp	.+554    	; 0xdec <__fp_szero>
     bc2:	cf c0       	rjmp	.+414    	; 0xd62 <__fp_nan>

00000bc4 <__divsf3x>:
     bc4:	f0 d0       	rcall	.+480    	; 0xda6 <__fp_split3>
     bc6:	98 f3       	brcs	.-26     	; 0xbae <__divsf3+0x4>

00000bc8 <__divsf3_pse>:
     bc8:	99 23       	and	r25, r25
     bca:	c9 f3       	breq	.-14     	; 0xbbe <__divsf3+0x14>
     bcc:	55 23       	and	r21, r21
     bce:	b1 f3       	breq	.-20     	; 0xbbc <__divsf3+0x12>
     bd0:	95 1b       	sub	r25, r21
     bd2:	55 0b       	sbc	r21, r21
     bd4:	bb 27       	eor	r27, r27
     bd6:	aa 27       	eor	r26, r26
     bd8:	62 17       	cp	r22, r18
     bda:	73 07       	cpc	r23, r19
     bdc:	84 07       	cpc	r24, r20
     bde:	38 f0       	brcs	.+14     	; 0xbee <__divsf3_pse+0x26>
     be0:	9f 5f       	subi	r25, 0xFF	; 255
     be2:	5f 4f       	sbci	r21, 0xFF	; 255
     be4:	22 0f       	add	r18, r18
     be6:	33 1f       	adc	r19, r19
     be8:	44 1f       	adc	r20, r20
     bea:	aa 1f       	adc	r26, r26
     bec:	a9 f3       	breq	.-22     	; 0xbd8 <__divsf3_pse+0x10>
     bee:	33 d0       	rcall	.+102    	; 0xc56 <__divsf3_pse+0x8e>
     bf0:	0e 2e       	mov	r0, r30
     bf2:	3a f0       	brmi	.+14     	; 0xc02 <__divsf3_pse+0x3a>
     bf4:	e0 e8       	ldi	r30, 0x80	; 128
     bf6:	30 d0       	rcall	.+96     	; 0xc58 <__divsf3_pse+0x90>
     bf8:	91 50       	subi	r25, 0x01	; 1
     bfa:	50 40       	sbci	r21, 0x00	; 0
     bfc:	e6 95       	lsr	r30
     bfe:	00 1c       	adc	r0, r0
     c00:	ca f7       	brpl	.-14     	; 0xbf4 <__divsf3_pse+0x2c>
     c02:	29 d0       	rcall	.+82     	; 0xc56 <__divsf3_pse+0x8e>
     c04:	fe 2f       	mov	r31, r30
     c06:	27 d0       	rcall	.+78     	; 0xc56 <__divsf3_pse+0x8e>
     c08:	66 0f       	add	r22, r22
     c0a:	77 1f       	adc	r23, r23
     c0c:	88 1f       	adc	r24, r24
     c0e:	bb 1f       	adc	r27, r27
     c10:	26 17       	cp	r18, r22
     c12:	37 07       	cpc	r19, r23
     c14:	48 07       	cpc	r20, r24
     c16:	ab 07       	cpc	r26, r27
     c18:	b0 e8       	ldi	r27, 0x80	; 128
     c1a:	09 f0       	breq	.+2      	; 0xc1e <__divsf3_pse+0x56>
     c1c:	bb 0b       	sbc	r27, r27
     c1e:	80 2d       	mov	r24, r0
     c20:	bf 01       	movw	r22, r30
     c22:	ff 27       	eor	r31, r31
     c24:	93 58       	subi	r25, 0x83	; 131
     c26:	5f 4f       	sbci	r21, 0xFF	; 255
     c28:	2a f0       	brmi	.+10     	; 0xc34 <__divsf3_pse+0x6c>
     c2a:	9e 3f       	cpi	r25, 0xFE	; 254
     c2c:	51 05       	cpc	r21, r1
     c2e:	68 f0       	brcs	.+26     	; 0xc4a <__divsf3_pse+0x82>
     c30:	92 c0       	rjmp	.+292    	; 0xd56 <__fp_inf>
     c32:	dc c0       	rjmp	.+440    	; 0xdec <__fp_szero>
     c34:	5f 3f       	cpi	r21, 0xFF	; 255
     c36:	ec f3       	brlt	.-6      	; 0xc32 <__divsf3_pse+0x6a>
     c38:	98 3e       	cpi	r25, 0xE8	; 232
     c3a:	dc f3       	brlt	.-10     	; 0xc32 <__divsf3_pse+0x6a>
     c3c:	86 95       	lsr	r24
     c3e:	77 95       	ror	r23
     c40:	67 95       	ror	r22
     c42:	b7 95       	ror	r27
     c44:	f7 95       	ror	r31
     c46:	9f 5f       	subi	r25, 0xFF	; 255
     c48:	c9 f7       	brne	.-14     	; 0xc3c <__divsf3_pse+0x74>
     c4a:	88 0f       	add	r24, r24
     c4c:	91 1d       	adc	r25, r1
     c4e:	96 95       	lsr	r25
     c50:	87 95       	ror	r24
     c52:	97 f9       	bld	r25, 7
     c54:	08 95       	ret
     c56:	e1 e0       	ldi	r30, 0x01	; 1
     c58:	66 0f       	add	r22, r22
     c5a:	77 1f       	adc	r23, r23
     c5c:	88 1f       	adc	r24, r24
     c5e:	bb 1f       	adc	r27, r27
     c60:	62 17       	cp	r22, r18
     c62:	73 07       	cpc	r23, r19
     c64:	84 07       	cpc	r24, r20
     c66:	ba 07       	cpc	r27, r26
     c68:	20 f0       	brcs	.+8      	; 0xc72 <__divsf3_pse+0xaa>
     c6a:	62 1b       	sub	r22, r18
     c6c:	73 0b       	sbc	r23, r19
     c6e:	84 0b       	sbc	r24, r20
     c70:	ba 0b       	sbc	r27, r26
     c72:	ee 1f       	adc	r30, r30
     c74:	88 f7       	brcc	.-30     	; 0xc58 <__divsf3_pse+0x90>
     c76:	e0 95       	com	r30
     c78:	08 95       	ret

00000c7a <__fixsfsi>:
     c7a:	04 d0       	rcall	.+8      	; 0xc84 <__fixunssfsi>
     c7c:	68 94       	set
     c7e:	b1 11       	cpse	r27, r1
     c80:	b5 c0       	rjmp	.+362    	; 0xdec <__fp_szero>
     c82:	08 95       	ret

00000c84 <__fixunssfsi>:
     c84:	98 d0       	rcall	.+304    	; 0xdb6 <__fp_splitA>
     c86:	88 f0       	brcs	.+34     	; 0xcaa <__fixunssfsi+0x26>
     c88:	9f 57       	subi	r25, 0x7F	; 127
     c8a:	90 f0       	brcs	.+36     	; 0xcb0 <__fixunssfsi+0x2c>
     c8c:	b9 2f       	mov	r27, r25
     c8e:	99 27       	eor	r25, r25
     c90:	b7 51       	subi	r27, 0x17	; 23
     c92:	a0 f0       	brcs	.+40     	; 0xcbc <__fixunssfsi+0x38>
     c94:	d1 f0       	breq	.+52     	; 0xcca <__fixunssfsi+0x46>
     c96:	66 0f       	add	r22, r22
     c98:	77 1f       	adc	r23, r23
     c9a:	88 1f       	adc	r24, r24
     c9c:	99 1f       	adc	r25, r25
     c9e:	1a f0       	brmi	.+6      	; 0xca6 <__fixunssfsi+0x22>
     ca0:	ba 95       	dec	r27
     ca2:	c9 f7       	brne	.-14     	; 0xc96 <__fixunssfsi+0x12>
     ca4:	12 c0       	rjmp	.+36     	; 0xcca <__fixunssfsi+0x46>
     ca6:	b1 30       	cpi	r27, 0x01	; 1
     ca8:	81 f0       	breq	.+32     	; 0xcca <__fixunssfsi+0x46>
     caa:	9f d0       	rcall	.+318    	; 0xdea <__fp_zero>
     cac:	b1 e0       	ldi	r27, 0x01	; 1
     cae:	08 95       	ret
     cb0:	9c c0       	rjmp	.+312    	; 0xdea <__fp_zero>
     cb2:	67 2f       	mov	r22, r23
     cb4:	78 2f       	mov	r23, r24
     cb6:	88 27       	eor	r24, r24
     cb8:	b8 5f       	subi	r27, 0xF8	; 248
     cba:	39 f0       	breq	.+14     	; 0xcca <__fixunssfsi+0x46>
     cbc:	b9 3f       	cpi	r27, 0xF9	; 249
     cbe:	cc f3       	brlt	.-14     	; 0xcb2 <__fixunssfsi+0x2e>
     cc0:	86 95       	lsr	r24
     cc2:	77 95       	ror	r23
     cc4:	67 95       	ror	r22
     cc6:	b3 95       	inc	r27
     cc8:	d9 f7       	brne	.-10     	; 0xcc0 <__fixunssfsi+0x3c>
     cca:	3e f4       	brtc	.+14     	; 0xcda <__fixunssfsi+0x56>
     ccc:	90 95       	com	r25
     cce:	80 95       	com	r24
     cd0:	70 95       	com	r23
     cd2:	61 95       	neg	r22
     cd4:	7f 4f       	sbci	r23, 0xFF	; 255
     cd6:	8f 4f       	sbci	r24, 0xFF	; 255
     cd8:	9f 4f       	sbci	r25, 0xFF	; 255
     cda:	08 95       	ret

00000cdc <__floatunsisf>:
     cdc:	e8 94       	clt
     cde:	09 c0       	rjmp	.+18     	; 0xcf2 <__floatsisf+0x12>

00000ce0 <__floatsisf>:
     ce0:	97 fb       	bst	r25, 7
     ce2:	3e f4       	brtc	.+14     	; 0xcf2 <__floatsisf+0x12>
     ce4:	90 95       	com	r25
     ce6:	80 95       	com	r24
     ce8:	70 95       	com	r23
     cea:	61 95       	neg	r22
     cec:	7f 4f       	sbci	r23, 0xFF	; 255
     cee:	8f 4f       	sbci	r24, 0xFF	; 255
     cf0:	9f 4f       	sbci	r25, 0xFF	; 255
     cf2:	99 23       	and	r25, r25
     cf4:	a9 f0       	breq	.+42     	; 0xd20 <__floatsisf+0x40>
     cf6:	f9 2f       	mov	r31, r25
     cf8:	96 e9       	ldi	r25, 0x96	; 150
     cfa:	bb 27       	eor	r27, r27
     cfc:	93 95       	inc	r25
     cfe:	f6 95       	lsr	r31
     d00:	87 95       	ror	r24
     d02:	77 95       	ror	r23
     d04:	67 95       	ror	r22
     d06:	b7 95       	ror	r27
     d08:	f1 11       	cpse	r31, r1
     d0a:	f8 cf       	rjmp	.-16     	; 0xcfc <__floatsisf+0x1c>
     d0c:	fa f4       	brpl	.+62     	; 0xd4c <__floatsisf+0x6c>
     d0e:	bb 0f       	add	r27, r27
     d10:	11 f4       	brne	.+4      	; 0xd16 <__floatsisf+0x36>
     d12:	60 ff       	sbrs	r22, 0
     d14:	1b c0       	rjmp	.+54     	; 0xd4c <__floatsisf+0x6c>
     d16:	6f 5f       	subi	r22, 0xFF	; 255
     d18:	7f 4f       	sbci	r23, 0xFF	; 255
     d1a:	8f 4f       	sbci	r24, 0xFF	; 255
     d1c:	9f 4f       	sbci	r25, 0xFF	; 255
     d1e:	16 c0       	rjmp	.+44     	; 0xd4c <__floatsisf+0x6c>
     d20:	88 23       	and	r24, r24
     d22:	11 f0       	breq	.+4      	; 0xd28 <__floatsisf+0x48>
     d24:	96 e9       	ldi	r25, 0x96	; 150
     d26:	11 c0       	rjmp	.+34     	; 0xd4a <__floatsisf+0x6a>
     d28:	77 23       	and	r23, r23
     d2a:	21 f0       	breq	.+8      	; 0xd34 <__floatsisf+0x54>
     d2c:	9e e8       	ldi	r25, 0x8E	; 142
     d2e:	87 2f       	mov	r24, r23
     d30:	76 2f       	mov	r23, r22
     d32:	05 c0       	rjmp	.+10     	; 0xd3e <__floatsisf+0x5e>
     d34:	66 23       	and	r22, r22
     d36:	71 f0       	breq	.+28     	; 0xd54 <__floatsisf+0x74>
     d38:	96 e8       	ldi	r25, 0x86	; 134
     d3a:	86 2f       	mov	r24, r22
     d3c:	70 e0       	ldi	r23, 0x00	; 0
     d3e:	60 e0       	ldi	r22, 0x00	; 0
     d40:	2a f0       	brmi	.+10     	; 0xd4c <__floatsisf+0x6c>
     d42:	9a 95       	dec	r25
     d44:	66 0f       	add	r22, r22
     d46:	77 1f       	adc	r23, r23
     d48:	88 1f       	adc	r24, r24
     d4a:	da f7       	brpl	.-10     	; 0xd42 <__floatsisf+0x62>
     d4c:	88 0f       	add	r24, r24
     d4e:	96 95       	lsr	r25
     d50:	87 95       	ror	r24
     d52:	97 f9       	bld	r25, 7
     d54:	08 95       	ret

00000d56 <__fp_inf>:
     d56:	97 f9       	bld	r25, 7
     d58:	9f 67       	ori	r25, 0x7F	; 127
     d5a:	80 e8       	ldi	r24, 0x80	; 128
     d5c:	70 e0       	ldi	r23, 0x00	; 0
     d5e:	60 e0       	ldi	r22, 0x00	; 0
     d60:	08 95       	ret

00000d62 <__fp_nan>:
     d62:	9f ef       	ldi	r25, 0xFF	; 255
     d64:	80 ec       	ldi	r24, 0xC0	; 192
     d66:	08 95       	ret

00000d68 <__fp_pscA>:
     d68:	00 24       	eor	r0, r0
     d6a:	0a 94       	dec	r0
     d6c:	16 16       	cp	r1, r22
     d6e:	17 06       	cpc	r1, r23
     d70:	18 06       	cpc	r1, r24
     d72:	09 06       	cpc	r0, r25
     d74:	08 95       	ret

00000d76 <__fp_pscB>:
     d76:	00 24       	eor	r0, r0
     d78:	0a 94       	dec	r0
     d7a:	12 16       	cp	r1, r18
     d7c:	13 06       	cpc	r1, r19
     d7e:	14 06       	cpc	r1, r20
     d80:	05 06       	cpc	r0, r21
     d82:	08 95       	ret

00000d84 <__fp_round>:
     d84:	09 2e       	mov	r0, r25
     d86:	03 94       	inc	r0
     d88:	00 0c       	add	r0, r0
     d8a:	11 f4       	brne	.+4      	; 0xd90 <__fp_round+0xc>
     d8c:	88 23       	and	r24, r24
     d8e:	52 f0       	brmi	.+20     	; 0xda4 <__fp_round+0x20>
     d90:	bb 0f       	add	r27, r27
     d92:	40 f4       	brcc	.+16     	; 0xda4 <__fp_round+0x20>
     d94:	bf 2b       	or	r27, r31
     d96:	11 f4       	brne	.+4      	; 0xd9c <__fp_round+0x18>
     d98:	60 ff       	sbrs	r22, 0
     d9a:	04 c0       	rjmp	.+8      	; 0xda4 <__fp_round+0x20>
     d9c:	6f 5f       	subi	r22, 0xFF	; 255
     d9e:	7f 4f       	sbci	r23, 0xFF	; 255
     da0:	8f 4f       	sbci	r24, 0xFF	; 255
     da2:	9f 4f       	sbci	r25, 0xFF	; 255
     da4:	08 95       	ret

00000da6 <__fp_split3>:
     da6:	57 fd       	sbrc	r21, 7
     da8:	90 58       	subi	r25, 0x80	; 128
     daa:	44 0f       	add	r20, r20
     dac:	55 1f       	adc	r21, r21
     dae:	59 f0       	breq	.+22     	; 0xdc6 <__fp_splitA+0x10>
     db0:	5f 3f       	cpi	r21, 0xFF	; 255
     db2:	71 f0       	breq	.+28     	; 0xdd0 <__fp_splitA+0x1a>
     db4:	47 95       	ror	r20

00000db6 <__fp_splitA>:
     db6:	88 0f       	add	r24, r24
     db8:	97 fb       	bst	r25, 7
     dba:	99 1f       	adc	r25, r25
     dbc:	61 f0       	breq	.+24     	; 0xdd6 <__fp_splitA+0x20>
     dbe:	9f 3f       	cpi	r25, 0xFF	; 255
     dc0:	79 f0       	breq	.+30     	; 0xde0 <__fp_splitA+0x2a>
     dc2:	87 95       	ror	r24
     dc4:	08 95       	ret
     dc6:	12 16       	cp	r1, r18
     dc8:	13 06       	cpc	r1, r19
     dca:	14 06       	cpc	r1, r20
     dcc:	55 1f       	adc	r21, r21
     dce:	f2 cf       	rjmp	.-28     	; 0xdb4 <__fp_split3+0xe>
     dd0:	46 95       	lsr	r20
     dd2:	f1 df       	rcall	.-30     	; 0xdb6 <__fp_splitA>
     dd4:	08 c0       	rjmp	.+16     	; 0xde6 <__fp_splitA+0x30>
     dd6:	16 16       	cp	r1, r22
     dd8:	17 06       	cpc	r1, r23
     dda:	18 06       	cpc	r1, r24
     ddc:	99 1f       	adc	r25, r25
     dde:	f1 cf       	rjmp	.-30     	; 0xdc2 <__fp_splitA+0xc>
     de0:	86 95       	lsr	r24
     de2:	71 05       	cpc	r23, r1
     de4:	61 05       	cpc	r22, r1
     de6:	08 94       	sec
     de8:	08 95       	ret

00000dea <__fp_zero>:
     dea:	e8 94       	clt

00000dec <__fp_szero>:
     dec:	bb 27       	eor	r27, r27
     dee:	66 27       	eor	r22, r22
     df0:	77 27       	eor	r23, r23
     df2:	cb 01       	movw	r24, r22
     df4:	97 f9       	bld	r25, 7
     df6:	08 95       	ret

00000df8 <__gesf2>:
     df8:	86 d0       	rcall	.+268    	; 0xf06 <__fp_cmp>
     dfa:	08 f4       	brcc	.+2      	; 0xdfe <__gesf2+0x6>
     dfc:	8f ef       	ldi	r24, 0xFF	; 255
     dfe:	08 95       	ret

00000e00 <__mulsf3>:
     e00:	0b d0       	rcall	.+22     	; 0xe18 <__mulsf3x>
     e02:	c0 cf       	rjmp	.-128    	; 0xd84 <__fp_round>
     e04:	b1 df       	rcall	.-158    	; 0xd68 <__fp_pscA>
     e06:	28 f0       	brcs	.+10     	; 0xe12 <__mulsf3+0x12>
     e08:	b6 df       	rcall	.-148    	; 0xd76 <__fp_pscB>
     e0a:	18 f0       	brcs	.+6      	; 0xe12 <__mulsf3+0x12>
     e0c:	95 23       	and	r25, r21
     e0e:	09 f0       	breq	.+2      	; 0xe12 <__mulsf3+0x12>
     e10:	a2 cf       	rjmp	.-188    	; 0xd56 <__fp_inf>
     e12:	a7 cf       	rjmp	.-178    	; 0xd62 <__fp_nan>
     e14:	11 24       	eor	r1, r1
     e16:	ea cf       	rjmp	.-44     	; 0xdec <__fp_szero>

00000e18 <__mulsf3x>:
     e18:	c6 df       	rcall	.-116    	; 0xda6 <__fp_split3>
     e1a:	a0 f3       	brcs	.-24     	; 0xe04 <__mulsf3+0x4>

00000e1c <__mulsf3_pse>:
     e1c:	95 9f       	mul	r25, r21
     e1e:	d1 f3       	breq	.-12     	; 0xe14 <__mulsf3+0x14>
     e20:	95 0f       	add	r25, r21
     e22:	50 e0       	ldi	r21, 0x00	; 0
     e24:	55 1f       	adc	r21, r21
     e26:	62 9f       	mul	r22, r18
     e28:	f0 01       	movw	r30, r0
     e2a:	72 9f       	mul	r23, r18
     e2c:	bb 27       	eor	r27, r27
     e2e:	f0 0d       	add	r31, r0
     e30:	b1 1d       	adc	r27, r1
     e32:	63 9f       	mul	r22, r19
     e34:	aa 27       	eor	r26, r26
     e36:	f0 0d       	add	r31, r0
     e38:	b1 1d       	adc	r27, r1
     e3a:	aa 1f       	adc	r26, r26
     e3c:	64 9f       	mul	r22, r20
     e3e:	66 27       	eor	r22, r22
     e40:	b0 0d       	add	r27, r0
     e42:	a1 1d       	adc	r26, r1
     e44:	66 1f       	adc	r22, r22
     e46:	82 9f       	mul	r24, r18
     e48:	22 27       	eor	r18, r18
     e4a:	b0 0d       	add	r27, r0
     e4c:	a1 1d       	adc	r26, r1
     e4e:	62 1f       	adc	r22, r18
     e50:	73 9f       	mul	r23, r19
     e52:	b0 0d       	add	r27, r0
     e54:	a1 1d       	adc	r26, r1
     e56:	62 1f       	adc	r22, r18
     e58:	83 9f       	mul	r24, r19
     e5a:	a0 0d       	add	r26, r0
     e5c:	61 1d       	adc	r22, r1
     e5e:	22 1f       	adc	r18, r18
     e60:	74 9f       	mul	r23, r20
     e62:	33 27       	eor	r19, r19
     e64:	a0 0d       	add	r26, r0
     e66:	61 1d       	adc	r22, r1
     e68:	23 1f       	adc	r18, r19
     e6a:	84 9f       	mul	r24, r20
     e6c:	60 0d       	add	r22, r0
     e6e:	21 1d       	adc	r18, r1
     e70:	82 2f       	mov	r24, r18
     e72:	76 2f       	mov	r23, r22
     e74:	6a 2f       	mov	r22, r26
     e76:	11 24       	eor	r1, r1
     e78:	9f 57       	subi	r25, 0x7F	; 127
     e7a:	50 40       	sbci	r21, 0x00	; 0
     e7c:	8a f0       	brmi	.+34     	; 0xea0 <__mulsf3_pse+0x84>
     e7e:	e1 f0       	breq	.+56     	; 0xeb8 <__mulsf3_pse+0x9c>
     e80:	88 23       	and	r24, r24
     e82:	4a f0       	brmi	.+18     	; 0xe96 <__mulsf3_pse+0x7a>
     e84:	ee 0f       	add	r30, r30
     e86:	ff 1f       	adc	r31, r31
     e88:	bb 1f       	adc	r27, r27
     e8a:	66 1f       	adc	r22, r22
     e8c:	77 1f       	adc	r23, r23
     e8e:	88 1f       	adc	r24, r24
     e90:	91 50       	subi	r25, 0x01	; 1
     e92:	50 40       	sbci	r21, 0x00	; 0
     e94:	a9 f7       	brne	.-22     	; 0xe80 <__mulsf3_pse+0x64>
     e96:	9e 3f       	cpi	r25, 0xFE	; 254
     e98:	51 05       	cpc	r21, r1
     e9a:	70 f0       	brcs	.+28     	; 0xeb8 <__mulsf3_pse+0x9c>
     e9c:	5c cf       	rjmp	.-328    	; 0xd56 <__fp_inf>
     e9e:	a6 cf       	rjmp	.-180    	; 0xdec <__fp_szero>
     ea0:	5f 3f       	cpi	r21, 0xFF	; 255
     ea2:	ec f3       	brlt	.-6      	; 0xe9e <__mulsf3_pse+0x82>
     ea4:	98 3e       	cpi	r25, 0xE8	; 232
     ea6:	dc f3       	brlt	.-10     	; 0xe9e <__mulsf3_pse+0x82>
     ea8:	86 95       	lsr	r24
     eaa:	77 95       	ror	r23
     eac:	67 95       	ror	r22
     eae:	b7 95       	ror	r27
     eb0:	f7 95       	ror	r31
     eb2:	e7 95       	ror	r30
     eb4:	9f 5f       	subi	r25, 0xFF	; 255
     eb6:	c1 f7       	brne	.-16     	; 0xea8 <__mulsf3_pse+0x8c>
     eb8:	fe 2b       	or	r31, r30
     eba:	88 0f       	add	r24, r24
     ebc:	91 1d       	adc	r25, r1
     ebe:	96 95       	lsr	r25
     ec0:	87 95       	ror	r24
     ec2:	97 f9       	bld	r25, 7
     ec4:	08 95       	ret

00000ec6 <round>:
     ec6:	77 df       	rcall	.-274    	; 0xdb6 <__fp_splitA>
     ec8:	e0 f0       	brcs	.+56     	; 0xf02 <round+0x3c>
     eca:	9e 37       	cpi	r25, 0x7E	; 126
     ecc:	d8 f0       	brcs	.+54     	; 0xf04 <round+0x3e>
     ece:	96 39       	cpi	r25, 0x96	; 150
     ed0:	b8 f4       	brcc	.+46     	; 0xf00 <round+0x3a>
     ed2:	9e 38       	cpi	r25, 0x8E	; 142
     ed4:	48 f4       	brcc	.+18     	; 0xee8 <round+0x22>
     ed6:	67 2f       	mov	r22, r23
     ed8:	78 2f       	mov	r23, r24
     eda:	88 27       	eor	r24, r24
     edc:	98 5f       	subi	r25, 0xF8	; 248
     ede:	f9 cf       	rjmp	.-14     	; 0xed2 <round+0xc>
     ee0:	86 95       	lsr	r24
     ee2:	77 95       	ror	r23
     ee4:	67 95       	ror	r22
     ee6:	93 95       	inc	r25
     ee8:	95 39       	cpi	r25, 0x95	; 149
     eea:	d0 f3       	brcs	.-12     	; 0xee0 <round+0x1a>
     eec:	b6 2f       	mov	r27, r22
     eee:	b1 70       	andi	r27, 0x01	; 1
     ef0:	6b 0f       	add	r22, r27
     ef2:	71 1d       	adc	r23, r1
     ef4:	81 1d       	adc	r24, r1
     ef6:	20 f4       	brcc	.+8      	; 0xf00 <round+0x3a>
     ef8:	87 95       	ror	r24
     efa:	77 95       	ror	r23
     efc:	67 95       	ror	r22
     efe:	93 95       	inc	r25
     f00:	26 c0       	rjmp	.+76     	; 0xf4e <__fp_mintl>
     f02:	40 c0       	rjmp	.+128    	; 0xf84 <__fp_mpack>
     f04:	73 cf       	rjmp	.-282    	; 0xdec <__fp_szero>

00000f06 <__fp_cmp>:
     f06:	99 0f       	add	r25, r25
     f08:	00 08       	sbc	r0, r0
     f0a:	55 0f       	add	r21, r21
     f0c:	aa 0b       	sbc	r26, r26
     f0e:	e0 e8       	ldi	r30, 0x80	; 128
     f10:	fe ef       	ldi	r31, 0xFE	; 254
     f12:	16 16       	cp	r1, r22
     f14:	17 06       	cpc	r1, r23
     f16:	e8 07       	cpc	r30, r24
     f18:	f9 07       	cpc	r31, r25
     f1a:	c0 f0       	brcs	.+48     	; 0xf4c <__fp_cmp+0x46>
     f1c:	12 16       	cp	r1, r18
     f1e:	13 06       	cpc	r1, r19
     f20:	e4 07       	cpc	r30, r20
     f22:	f5 07       	cpc	r31, r21
     f24:	98 f0       	brcs	.+38     	; 0xf4c <__fp_cmp+0x46>
     f26:	62 1b       	sub	r22, r18
     f28:	73 0b       	sbc	r23, r19
     f2a:	84 0b       	sbc	r24, r20
     f2c:	95 0b       	sbc	r25, r21
     f2e:	39 f4       	brne	.+14     	; 0xf3e <__fp_cmp+0x38>
     f30:	0a 26       	eor	r0, r26
     f32:	61 f0       	breq	.+24     	; 0xf4c <__fp_cmp+0x46>
     f34:	23 2b       	or	r18, r19
     f36:	24 2b       	or	r18, r20
     f38:	25 2b       	or	r18, r21
     f3a:	21 f4       	brne	.+8      	; 0xf44 <__fp_cmp+0x3e>
     f3c:	08 95       	ret
     f3e:	0a 26       	eor	r0, r26
     f40:	09 f4       	brne	.+2      	; 0xf44 <__fp_cmp+0x3e>
     f42:	a1 40       	sbci	r26, 0x01	; 1
     f44:	a6 95       	lsr	r26
     f46:	8f ef       	ldi	r24, 0xFF	; 255
     f48:	81 1d       	adc	r24, r1
     f4a:	81 1d       	adc	r24, r1
     f4c:	08 95       	ret

00000f4e <__fp_mintl>:
     f4e:	88 23       	and	r24, r24
     f50:	71 f4       	brne	.+28     	; 0xf6e <__fp_mintl+0x20>
     f52:	77 23       	and	r23, r23
     f54:	21 f0       	breq	.+8      	; 0xf5e <__fp_mintl+0x10>
     f56:	98 50       	subi	r25, 0x08	; 8
     f58:	87 2b       	or	r24, r23
     f5a:	76 2f       	mov	r23, r22
     f5c:	07 c0       	rjmp	.+14     	; 0xf6c <__fp_mintl+0x1e>
     f5e:	66 23       	and	r22, r22
     f60:	11 f4       	brne	.+4      	; 0xf66 <__fp_mintl+0x18>
     f62:	99 27       	eor	r25, r25
     f64:	0d c0       	rjmp	.+26     	; 0xf80 <__fp_mintl+0x32>
     f66:	90 51       	subi	r25, 0x10	; 16
     f68:	86 2b       	or	r24, r22
     f6a:	70 e0       	ldi	r23, 0x00	; 0
     f6c:	60 e0       	ldi	r22, 0x00	; 0
     f6e:	2a f0       	brmi	.+10     	; 0xf7a <__fp_mintl+0x2c>
     f70:	9a 95       	dec	r25
     f72:	66 0f       	add	r22, r22
     f74:	77 1f       	adc	r23, r23
     f76:	88 1f       	adc	r24, r24
     f78:	da f7       	brpl	.-10     	; 0xf70 <__fp_mintl+0x22>
     f7a:	88 0f       	add	r24, r24
     f7c:	96 95       	lsr	r25
     f7e:	87 95       	ror	r24
     f80:	97 f9       	bld	r25, 7
     f82:	08 95       	ret

00000f84 <__fp_mpack>:
     f84:	9f 3f       	cpi	r25, 0xFF	; 255
     f86:	31 f0       	breq	.+12     	; 0xf94 <__fp_mpack_finite+0xc>

00000f88 <__fp_mpack_finite>:
     f88:	91 50       	subi	r25, 0x01	; 1
     f8a:	20 f4       	brcc	.+8      	; 0xf94 <__fp_mpack_finite+0xc>
     f8c:	87 95       	ror	r24
     f8e:	77 95       	ror	r23
     f90:	67 95       	ror	r22
     f92:	b7 95       	ror	r27
     f94:	88 0f       	add	r24, r24
     f96:	91 1d       	adc	r25, r1
     f98:	96 95       	lsr	r25
     f9a:	87 95       	ror	r24
     f9c:	97 f9       	bld	r25, 7
     f9e:	08 95       	ret

00000fa0 <memcpy>:
     fa0:	fb 01       	movw	r30, r22
     fa2:	dc 01       	movw	r26, r24
     fa4:	02 c0       	rjmp	.+4      	; 0xfaa <memcpy+0xa>
     fa6:	01 90       	ld	r0, Z+
     fa8:	0d 92       	st	X+, r0
     faa:	41 50       	subi	r20, 0x01	; 1
     fac:	50 40       	sbci	r21, 0x00	; 0
     fae:	d8 f7       	brcc	.-10     	; 0xfa6 <memcpy+0x6>
     fb0:	08 95       	ret

00000fb2 <memmove>:
     fb2:	68 17       	cp	r22, r24
     fb4:	79 07       	cpc	r23, r25
     fb6:	68 f4       	brcc	.+26     	; 0xfd2 <memmove+0x20>
     fb8:	fb 01       	movw	r30, r22
     fba:	dc 01       	movw	r26, r24
     fbc:	e4 0f       	add	r30, r20
     fbe:	f5 1f       	adc	r31, r21
     fc0:	a4 0f       	add	r26, r20
     fc2:	b5 1f       	adc	r27, r21
     fc4:	02 c0       	rjmp	.+4      	; 0xfca <memmove+0x18>
     fc6:	02 90       	ld	r0, -Z
     fc8:	0e 92       	st	-X, r0
     fca:	41 50       	subi	r20, 0x01	; 1
     fcc:	50 40       	sbci	r21, 0x00	; 0
     fce:	d8 f7       	brcc	.-10     	; 0xfc6 <memmove+0x14>
     fd0:	08 95       	ret
     fd2:	e6 cf       	rjmp	.-52     	; 0xfa0 <memcpy>

00000fd4 <strncmp>:
     fd4:	fb 01       	movw	r30, r22
     fd6:	dc 01       	movw	r26, r24
     fd8:	41 50       	subi	r20, 0x01	; 1
     fda:	50 40       	sbci	r21, 0x00	; 0
     fdc:	30 f0       	brcs	.+12     	; 0xfea <strncmp+0x16>
     fde:	8d 91       	ld	r24, X+
     fe0:	01 90       	ld	r0, Z+
     fe2:	80 19       	sub	r24, r0
     fe4:	19 f4       	brne	.+6      	; 0xfec <strncmp+0x18>
     fe6:	00 20       	and	r0, r0
     fe8:	b9 f7       	brne	.-18     	; 0xfd8 <strncmp+0x4>
     fea:	88 1b       	sub	r24, r24
     fec:	99 0b       	sbc	r25, r25
     fee:	08 95       	ret

00000ff0 <strstr>:
     ff0:	fb 01       	movw	r30, r22
     ff2:	51 91       	ld	r21, Z+
     ff4:	55 23       	and	r21, r21
     ff6:	a9 f0       	breq	.+42     	; 0x1022 <strstr+0x32>
     ff8:	bf 01       	movw	r22, r30
     ffa:	dc 01       	movw	r26, r24
     ffc:	4d 91       	ld	r20, X+
     ffe:	45 17       	cp	r20, r21
    1000:	41 11       	cpse	r20, r1
    1002:	e1 f7       	brne	.-8      	; 0xffc <strstr+0xc>
    1004:	59 f4       	brne	.+22     	; 0x101c <strstr+0x2c>
    1006:	cd 01       	movw	r24, r26
    1008:	01 90       	ld	r0, Z+
    100a:	00 20       	and	r0, r0
    100c:	49 f0       	breq	.+18     	; 0x1020 <strstr+0x30>
    100e:	4d 91       	ld	r20, X+
    1010:	40 15       	cp	r20, r0
    1012:	41 11       	cpse	r20, r1
    1014:	c9 f3       	breq	.-14     	; 0x1008 <strstr+0x18>
    1016:	fb 01       	movw	r30, r22
    1018:	41 11       	cpse	r20, r1
    101a:	ef cf       	rjmp	.-34     	; 0xffa <strstr+0xa>
    101c:	81 e0       	ldi	r24, 0x01	; 1
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	01 97       	sbiw	r24, 0x01	; 1
    1022:	08 95       	ret

00001024 <sprintf>:
    1024:	0f 93       	push	r16
    1026:	1f 93       	push	r17
    1028:	cf 93       	push	r28
    102a:	df 93       	push	r29
    102c:	cd b7       	in	r28, 0x3d	; 61
    102e:	de b7       	in	r29, 0x3e	; 62
    1030:	2e 97       	sbiw	r28, 0x0e	; 14
    1032:	0f b6       	in	r0, 0x3f	; 63
    1034:	f8 94       	cli
    1036:	de bf       	out	0x3e, r29	; 62
    1038:	0f be       	out	0x3f, r0	; 63
    103a:	cd bf       	out	0x3d, r28	; 61
    103c:	0e 89       	ldd	r16, Y+22	; 0x16
    103e:	1f 89       	ldd	r17, Y+23	; 0x17
    1040:	86 e0       	ldi	r24, 0x06	; 6
    1042:	8c 83       	std	Y+4, r24	; 0x04
    1044:	1a 83       	std	Y+2, r17	; 0x02
    1046:	09 83       	std	Y+1, r16	; 0x01
    1048:	8f ef       	ldi	r24, 0xFF	; 255
    104a:	9f e7       	ldi	r25, 0x7F	; 127
    104c:	9e 83       	std	Y+6, r25	; 0x06
    104e:	8d 83       	std	Y+5, r24	; 0x05
    1050:	ae 01       	movw	r20, r28
    1052:	46 5e       	subi	r20, 0xE6	; 230
    1054:	5f 4f       	sbci	r21, 0xFF	; 255
    1056:	68 8d       	ldd	r22, Y+24	; 0x18
    1058:	79 8d       	ldd	r23, Y+25	; 0x19
    105a:	ce 01       	movw	r24, r28
    105c:	01 96       	adiw	r24, 0x01	; 1
    105e:	10 d0       	rcall	.+32     	; 0x1080 <vfprintf>
    1060:	ef 81       	ldd	r30, Y+7	; 0x07
    1062:	f8 85       	ldd	r31, Y+8	; 0x08
    1064:	e0 0f       	add	r30, r16
    1066:	f1 1f       	adc	r31, r17
    1068:	10 82       	st	Z, r1
    106a:	2e 96       	adiw	r28, 0x0e	; 14
    106c:	0f b6       	in	r0, 0x3f	; 63
    106e:	f8 94       	cli
    1070:	de bf       	out	0x3e, r29	; 62
    1072:	0f be       	out	0x3f, r0	; 63
    1074:	cd bf       	out	0x3d, r28	; 61
    1076:	df 91       	pop	r29
    1078:	cf 91       	pop	r28
    107a:	1f 91       	pop	r17
    107c:	0f 91       	pop	r16
    107e:	08 95       	ret

00001080 <vfprintf>:
    1080:	2f 92       	push	r2
    1082:	3f 92       	push	r3
    1084:	4f 92       	push	r4
    1086:	5f 92       	push	r5
    1088:	6f 92       	push	r6
    108a:	7f 92       	push	r7
    108c:	8f 92       	push	r8
    108e:	9f 92       	push	r9
    1090:	af 92       	push	r10
    1092:	bf 92       	push	r11
    1094:	cf 92       	push	r12
    1096:	df 92       	push	r13
    1098:	ef 92       	push	r14
    109a:	ff 92       	push	r15
    109c:	0f 93       	push	r16
    109e:	1f 93       	push	r17
    10a0:	cf 93       	push	r28
    10a2:	df 93       	push	r29
    10a4:	cd b7       	in	r28, 0x3d	; 61
    10a6:	de b7       	in	r29, 0x3e	; 62
    10a8:	2b 97       	sbiw	r28, 0x0b	; 11
    10aa:	0f b6       	in	r0, 0x3f	; 63
    10ac:	f8 94       	cli
    10ae:	de bf       	out	0x3e, r29	; 62
    10b0:	0f be       	out	0x3f, r0	; 63
    10b2:	cd bf       	out	0x3d, r28	; 61
    10b4:	6c 01       	movw	r12, r24
    10b6:	7b 01       	movw	r14, r22
    10b8:	8a 01       	movw	r16, r20
    10ba:	fc 01       	movw	r30, r24
    10bc:	17 82       	std	Z+7, r1	; 0x07
    10be:	16 82       	std	Z+6, r1	; 0x06
    10c0:	83 81       	ldd	r24, Z+3	; 0x03
    10c2:	81 ff       	sbrs	r24, 1
    10c4:	bf c1       	rjmp	.+894    	; 0x1444 <vfprintf+0x3c4>
    10c6:	ce 01       	movw	r24, r28
    10c8:	01 96       	adiw	r24, 0x01	; 1
    10ca:	3c 01       	movw	r6, r24
    10cc:	f6 01       	movw	r30, r12
    10ce:	93 81       	ldd	r25, Z+3	; 0x03
    10d0:	f7 01       	movw	r30, r14
    10d2:	93 fd       	sbrc	r25, 3
    10d4:	85 91       	lpm	r24, Z+
    10d6:	93 ff       	sbrs	r25, 3
    10d8:	81 91       	ld	r24, Z+
    10da:	7f 01       	movw	r14, r30
    10dc:	88 23       	and	r24, r24
    10de:	09 f4       	brne	.+2      	; 0x10e2 <vfprintf+0x62>
    10e0:	ad c1       	rjmp	.+858    	; 0x143c <vfprintf+0x3bc>
    10e2:	85 32       	cpi	r24, 0x25	; 37
    10e4:	39 f4       	brne	.+14     	; 0x10f4 <vfprintf+0x74>
    10e6:	93 fd       	sbrc	r25, 3
    10e8:	85 91       	lpm	r24, Z+
    10ea:	93 ff       	sbrs	r25, 3
    10ec:	81 91       	ld	r24, Z+
    10ee:	7f 01       	movw	r14, r30
    10f0:	85 32       	cpi	r24, 0x25	; 37
    10f2:	21 f4       	brne	.+8      	; 0x10fc <vfprintf+0x7c>
    10f4:	b6 01       	movw	r22, r12
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	d6 d1       	rcall	.+940    	; 0x14a6 <fputc>
    10fa:	e8 cf       	rjmp	.-48     	; 0x10cc <vfprintf+0x4c>
    10fc:	91 2c       	mov	r9, r1
    10fe:	21 2c       	mov	r2, r1
    1100:	31 2c       	mov	r3, r1
    1102:	ff e1       	ldi	r31, 0x1F	; 31
    1104:	f3 15       	cp	r31, r3
    1106:	d8 f0       	brcs	.+54     	; 0x113e <vfprintf+0xbe>
    1108:	8b 32       	cpi	r24, 0x2B	; 43
    110a:	79 f0       	breq	.+30     	; 0x112a <vfprintf+0xaa>
    110c:	38 f4       	brcc	.+14     	; 0x111c <vfprintf+0x9c>
    110e:	80 32       	cpi	r24, 0x20	; 32
    1110:	79 f0       	breq	.+30     	; 0x1130 <vfprintf+0xb0>
    1112:	83 32       	cpi	r24, 0x23	; 35
    1114:	a1 f4       	brne	.+40     	; 0x113e <vfprintf+0xbe>
    1116:	23 2d       	mov	r18, r3
    1118:	20 61       	ori	r18, 0x10	; 16
    111a:	1d c0       	rjmp	.+58     	; 0x1156 <vfprintf+0xd6>
    111c:	8d 32       	cpi	r24, 0x2D	; 45
    111e:	61 f0       	breq	.+24     	; 0x1138 <vfprintf+0xb8>
    1120:	80 33       	cpi	r24, 0x30	; 48
    1122:	69 f4       	brne	.+26     	; 0x113e <vfprintf+0xbe>
    1124:	23 2d       	mov	r18, r3
    1126:	21 60       	ori	r18, 0x01	; 1
    1128:	16 c0       	rjmp	.+44     	; 0x1156 <vfprintf+0xd6>
    112a:	83 2d       	mov	r24, r3
    112c:	82 60       	ori	r24, 0x02	; 2
    112e:	38 2e       	mov	r3, r24
    1130:	e3 2d       	mov	r30, r3
    1132:	e4 60       	ori	r30, 0x04	; 4
    1134:	3e 2e       	mov	r3, r30
    1136:	2a c0       	rjmp	.+84     	; 0x118c <vfprintf+0x10c>
    1138:	f3 2d       	mov	r31, r3
    113a:	f8 60       	ori	r31, 0x08	; 8
    113c:	1d c0       	rjmp	.+58     	; 0x1178 <vfprintf+0xf8>
    113e:	37 fc       	sbrc	r3, 7
    1140:	2d c0       	rjmp	.+90     	; 0x119c <vfprintf+0x11c>
    1142:	20 ed       	ldi	r18, 0xD0	; 208
    1144:	28 0f       	add	r18, r24
    1146:	2a 30       	cpi	r18, 0x0A	; 10
    1148:	40 f0       	brcs	.+16     	; 0x115a <vfprintf+0xda>
    114a:	8e 32       	cpi	r24, 0x2E	; 46
    114c:	b9 f4       	brne	.+46     	; 0x117c <vfprintf+0xfc>
    114e:	36 fc       	sbrc	r3, 6
    1150:	75 c1       	rjmp	.+746    	; 0x143c <vfprintf+0x3bc>
    1152:	23 2d       	mov	r18, r3
    1154:	20 64       	ori	r18, 0x40	; 64
    1156:	32 2e       	mov	r3, r18
    1158:	19 c0       	rjmp	.+50     	; 0x118c <vfprintf+0x10c>
    115a:	36 fe       	sbrs	r3, 6
    115c:	06 c0       	rjmp	.+12     	; 0x116a <vfprintf+0xea>
    115e:	8a e0       	ldi	r24, 0x0A	; 10
    1160:	98 9e       	mul	r9, r24
    1162:	20 0d       	add	r18, r0
    1164:	11 24       	eor	r1, r1
    1166:	92 2e       	mov	r9, r18
    1168:	11 c0       	rjmp	.+34     	; 0x118c <vfprintf+0x10c>
    116a:	ea e0       	ldi	r30, 0x0A	; 10
    116c:	2e 9e       	mul	r2, r30
    116e:	20 0d       	add	r18, r0
    1170:	11 24       	eor	r1, r1
    1172:	22 2e       	mov	r2, r18
    1174:	f3 2d       	mov	r31, r3
    1176:	f0 62       	ori	r31, 0x20	; 32
    1178:	3f 2e       	mov	r3, r31
    117a:	08 c0       	rjmp	.+16     	; 0x118c <vfprintf+0x10c>
    117c:	8c 36       	cpi	r24, 0x6C	; 108
    117e:	21 f4       	brne	.+8      	; 0x1188 <vfprintf+0x108>
    1180:	83 2d       	mov	r24, r3
    1182:	80 68       	ori	r24, 0x80	; 128
    1184:	38 2e       	mov	r3, r24
    1186:	02 c0       	rjmp	.+4      	; 0x118c <vfprintf+0x10c>
    1188:	88 36       	cpi	r24, 0x68	; 104
    118a:	41 f4       	brne	.+16     	; 0x119c <vfprintf+0x11c>
    118c:	f7 01       	movw	r30, r14
    118e:	93 fd       	sbrc	r25, 3
    1190:	85 91       	lpm	r24, Z+
    1192:	93 ff       	sbrs	r25, 3
    1194:	81 91       	ld	r24, Z+
    1196:	7f 01       	movw	r14, r30
    1198:	81 11       	cpse	r24, r1
    119a:	b3 cf       	rjmp	.-154    	; 0x1102 <vfprintf+0x82>
    119c:	98 2f       	mov	r25, r24
    119e:	9f 7d       	andi	r25, 0xDF	; 223
    11a0:	95 54       	subi	r25, 0x45	; 69
    11a2:	93 30       	cpi	r25, 0x03	; 3
    11a4:	28 f4       	brcc	.+10     	; 0x11b0 <vfprintf+0x130>
    11a6:	0c 5f       	subi	r16, 0xFC	; 252
    11a8:	1f 4f       	sbci	r17, 0xFF	; 255
    11aa:	9f e3       	ldi	r25, 0x3F	; 63
    11ac:	99 83       	std	Y+1, r25	; 0x01
    11ae:	0d c0       	rjmp	.+26     	; 0x11ca <vfprintf+0x14a>
    11b0:	83 36       	cpi	r24, 0x63	; 99
    11b2:	31 f0       	breq	.+12     	; 0x11c0 <vfprintf+0x140>
    11b4:	83 37       	cpi	r24, 0x73	; 115
    11b6:	71 f0       	breq	.+28     	; 0x11d4 <vfprintf+0x154>
    11b8:	83 35       	cpi	r24, 0x53	; 83
    11ba:	09 f0       	breq	.+2      	; 0x11be <vfprintf+0x13e>
    11bc:	55 c0       	rjmp	.+170    	; 0x1268 <vfprintf+0x1e8>
    11be:	20 c0       	rjmp	.+64     	; 0x1200 <vfprintf+0x180>
    11c0:	f8 01       	movw	r30, r16
    11c2:	80 81       	ld	r24, Z
    11c4:	89 83       	std	Y+1, r24	; 0x01
    11c6:	0e 5f       	subi	r16, 0xFE	; 254
    11c8:	1f 4f       	sbci	r17, 0xFF	; 255
    11ca:	88 24       	eor	r8, r8
    11cc:	83 94       	inc	r8
    11ce:	91 2c       	mov	r9, r1
    11d0:	53 01       	movw	r10, r6
    11d2:	12 c0       	rjmp	.+36     	; 0x11f8 <vfprintf+0x178>
    11d4:	28 01       	movw	r4, r16
    11d6:	f2 e0       	ldi	r31, 0x02	; 2
    11d8:	4f 0e       	add	r4, r31
    11da:	51 1c       	adc	r5, r1
    11dc:	f8 01       	movw	r30, r16
    11de:	a0 80       	ld	r10, Z
    11e0:	b1 80       	ldd	r11, Z+1	; 0x01
    11e2:	36 fe       	sbrs	r3, 6
    11e4:	03 c0       	rjmp	.+6      	; 0x11ec <vfprintf+0x16c>
    11e6:	69 2d       	mov	r22, r9
    11e8:	70 e0       	ldi	r23, 0x00	; 0
    11ea:	02 c0       	rjmp	.+4      	; 0x11f0 <vfprintf+0x170>
    11ec:	6f ef       	ldi	r22, 0xFF	; 255
    11ee:	7f ef       	ldi	r23, 0xFF	; 255
    11f0:	c5 01       	movw	r24, r10
    11f2:	4e d1       	rcall	.+668    	; 0x1490 <strnlen>
    11f4:	4c 01       	movw	r8, r24
    11f6:	82 01       	movw	r16, r4
    11f8:	f3 2d       	mov	r31, r3
    11fa:	ff 77       	andi	r31, 0x7F	; 127
    11fc:	3f 2e       	mov	r3, r31
    11fe:	15 c0       	rjmp	.+42     	; 0x122a <vfprintf+0x1aa>
    1200:	28 01       	movw	r4, r16
    1202:	22 e0       	ldi	r18, 0x02	; 2
    1204:	42 0e       	add	r4, r18
    1206:	51 1c       	adc	r5, r1
    1208:	f8 01       	movw	r30, r16
    120a:	a0 80       	ld	r10, Z
    120c:	b1 80       	ldd	r11, Z+1	; 0x01
    120e:	36 fe       	sbrs	r3, 6
    1210:	03 c0       	rjmp	.+6      	; 0x1218 <vfprintf+0x198>
    1212:	69 2d       	mov	r22, r9
    1214:	70 e0       	ldi	r23, 0x00	; 0
    1216:	02 c0       	rjmp	.+4      	; 0x121c <vfprintf+0x19c>
    1218:	6f ef       	ldi	r22, 0xFF	; 255
    121a:	7f ef       	ldi	r23, 0xFF	; 255
    121c:	c5 01       	movw	r24, r10
    121e:	2d d1       	rcall	.+602    	; 0x147a <strnlen_P>
    1220:	4c 01       	movw	r8, r24
    1222:	f3 2d       	mov	r31, r3
    1224:	f0 68       	ori	r31, 0x80	; 128
    1226:	3f 2e       	mov	r3, r31
    1228:	82 01       	movw	r16, r4
    122a:	33 fc       	sbrc	r3, 3
    122c:	19 c0       	rjmp	.+50     	; 0x1260 <vfprintf+0x1e0>
    122e:	82 2d       	mov	r24, r2
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	88 16       	cp	r8, r24
    1234:	99 06       	cpc	r9, r25
    1236:	a0 f4       	brcc	.+40     	; 0x1260 <vfprintf+0x1e0>
    1238:	b6 01       	movw	r22, r12
    123a:	80 e2       	ldi	r24, 0x20	; 32
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	33 d1       	rcall	.+614    	; 0x14a6 <fputc>
    1240:	2a 94       	dec	r2
    1242:	f5 cf       	rjmp	.-22     	; 0x122e <vfprintf+0x1ae>
    1244:	f5 01       	movw	r30, r10
    1246:	37 fc       	sbrc	r3, 7
    1248:	85 91       	lpm	r24, Z+
    124a:	37 fe       	sbrs	r3, 7
    124c:	81 91       	ld	r24, Z+
    124e:	5f 01       	movw	r10, r30
    1250:	b6 01       	movw	r22, r12
    1252:	90 e0       	ldi	r25, 0x00	; 0
    1254:	28 d1       	rcall	.+592    	; 0x14a6 <fputc>
    1256:	21 10       	cpse	r2, r1
    1258:	2a 94       	dec	r2
    125a:	21 e0       	ldi	r18, 0x01	; 1
    125c:	82 1a       	sub	r8, r18
    125e:	91 08       	sbc	r9, r1
    1260:	81 14       	cp	r8, r1
    1262:	91 04       	cpc	r9, r1
    1264:	79 f7       	brne	.-34     	; 0x1244 <vfprintf+0x1c4>
    1266:	e1 c0       	rjmp	.+450    	; 0x142a <vfprintf+0x3aa>
    1268:	84 36       	cpi	r24, 0x64	; 100
    126a:	11 f0       	breq	.+4      	; 0x1270 <vfprintf+0x1f0>
    126c:	89 36       	cpi	r24, 0x69	; 105
    126e:	39 f5       	brne	.+78     	; 0x12be <vfprintf+0x23e>
    1270:	f8 01       	movw	r30, r16
    1272:	37 fe       	sbrs	r3, 7
    1274:	07 c0       	rjmp	.+14     	; 0x1284 <vfprintf+0x204>
    1276:	60 81       	ld	r22, Z
    1278:	71 81       	ldd	r23, Z+1	; 0x01
    127a:	82 81       	ldd	r24, Z+2	; 0x02
    127c:	93 81       	ldd	r25, Z+3	; 0x03
    127e:	0c 5f       	subi	r16, 0xFC	; 252
    1280:	1f 4f       	sbci	r17, 0xFF	; 255
    1282:	08 c0       	rjmp	.+16     	; 0x1294 <vfprintf+0x214>
    1284:	60 81       	ld	r22, Z
    1286:	71 81       	ldd	r23, Z+1	; 0x01
    1288:	07 2e       	mov	r0, r23
    128a:	00 0c       	add	r0, r0
    128c:	88 0b       	sbc	r24, r24
    128e:	99 0b       	sbc	r25, r25
    1290:	0e 5f       	subi	r16, 0xFE	; 254
    1292:	1f 4f       	sbci	r17, 0xFF	; 255
    1294:	f3 2d       	mov	r31, r3
    1296:	ff 76       	andi	r31, 0x6F	; 111
    1298:	3f 2e       	mov	r3, r31
    129a:	97 ff       	sbrs	r25, 7
    129c:	09 c0       	rjmp	.+18     	; 0x12b0 <vfprintf+0x230>
    129e:	90 95       	com	r25
    12a0:	80 95       	com	r24
    12a2:	70 95       	com	r23
    12a4:	61 95       	neg	r22
    12a6:	7f 4f       	sbci	r23, 0xFF	; 255
    12a8:	8f 4f       	sbci	r24, 0xFF	; 255
    12aa:	9f 4f       	sbci	r25, 0xFF	; 255
    12ac:	f0 68       	ori	r31, 0x80	; 128
    12ae:	3f 2e       	mov	r3, r31
    12b0:	2a e0       	ldi	r18, 0x0A	; 10
    12b2:	30 e0       	ldi	r19, 0x00	; 0
    12b4:	a3 01       	movw	r20, r6
    12b6:	33 d1       	rcall	.+614    	; 0x151e <__ultoa_invert>
    12b8:	88 2e       	mov	r8, r24
    12ba:	86 18       	sub	r8, r6
    12bc:	44 c0       	rjmp	.+136    	; 0x1346 <vfprintf+0x2c6>
    12be:	85 37       	cpi	r24, 0x75	; 117
    12c0:	31 f4       	brne	.+12     	; 0x12ce <vfprintf+0x24e>
    12c2:	23 2d       	mov	r18, r3
    12c4:	2f 7e       	andi	r18, 0xEF	; 239
    12c6:	b2 2e       	mov	r11, r18
    12c8:	2a e0       	ldi	r18, 0x0A	; 10
    12ca:	30 e0       	ldi	r19, 0x00	; 0
    12cc:	25 c0       	rjmp	.+74     	; 0x1318 <vfprintf+0x298>
    12ce:	93 2d       	mov	r25, r3
    12d0:	99 7f       	andi	r25, 0xF9	; 249
    12d2:	b9 2e       	mov	r11, r25
    12d4:	8f 36       	cpi	r24, 0x6F	; 111
    12d6:	c1 f0       	breq	.+48     	; 0x1308 <vfprintf+0x288>
    12d8:	18 f4       	brcc	.+6      	; 0x12e0 <vfprintf+0x260>
    12da:	88 35       	cpi	r24, 0x58	; 88
    12dc:	79 f0       	breq	.+30     	; 0x12fc <vfprintf+0x27c>
    12de:	ae c0       	rjmp	.+348    	; 0x143c <vfprintf+0x3bc>
    12e0:	80 37       	cpi	r24, 0x70	; 112
    12e2:	19 f0       	breq	.+6      	; 0x12ea <vfprintf+0x26a>
    12e4:	88 37       	cpi	r24, 0x78	; 120
    12e6:	21 f0       	breq	.+8      	; 0x12f0 <vfprintf+0x270>
    12e8:	a9 c0       	rjmp	.+338    	; 0x143c <vfprintf+0x3bc>
    12ea:	e9 2f       	mov	r30, r25
    12ec:	e0 61       	ori	r30, 0x10	; 16
    12ee:	be 2e       	mov	r11, r30
    12f0:	b4 fe       	sbrs	r11, 4
    12f2:	0d c0       	rjmp	.+26     	; 0x130e <vfprintf+0x28e>
    12f4:	fb 2d       	mov	r31, r11
    12f6:	f4 60       	ori	r31, 0x04	; 4
    12f8:	bf 2e       	mov	r11, r31
    12fa:	09 c0       	rjmp	.+18     	; 0x130e <vfprintf+0x28e>
    12fc:	34 fe       	sbrs	r3, 4
    12fe:	0a c0       	rjmp	.+20     	; 0x1314 <vfprintf+0x294>
    1300:	29 2f       	mov	r18, r25
    1302:	26 60       	ori	r18, 0x06	; 6
    1304:	b2 2e       	mov	r11, r18
    1306:	06 c0       	rjmp	.+12     	; 0x1314 <vfprintf+0x294>
    1308:	28 e0       	ldi	r18, 0x08	; 8
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	05 c0       	rjmp	.+10     	; 0x1318 <vfprintf+0x298>
    130e:	20 e1       	ldi	r18, 0x10	; 16
    1310:	30 e0       	ldi	r19, 0x00	; 0
    1312:	02 c0       	rjmp	.+4      	; 0x1318 <vfprintf+0x298>
    1314:	20 e1       	ldi	r18, 0x10	; 16
    1316:	32 e0       	ldi	r19, 0x02	; 2
    1318:	f8 01       	movw	r30, r16
    131a:	b7 fe       	sbrs	r11, 7
    131c:	07 c0       	rjmp	.+14     	; 0x132c <vfprintf+0x2ac>
    131e:	60 81       	ld	r22, Z
    1320:	71 81       	ldd	r23, Z+1	; 0x01
    1322:	82 81       	ldd	r24, Z+2	; 0x02
    1324:	93 81       	ldd	r25, Z+3	; 0x03
    1326:	0c 5f       	subi	r16, 0xFC	; 252
    1328:	1f 4f       	sbci	r17, 0xFF	; 255
    132a:	06 c0       	rjmp	.+12     	; 0x1338 <vfprintf+0x2b8>
    132c:	60 81       	ld	r22, Z
    132e:	71 81       	ldd	r23, Z+1	; 0x01
    1330:	80 e0       	ldi	r24, 0x00	; 0
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	0e 5f       	subi	r16, 0xFE	; 254
    1336:	1f 4f       	sbci	r17, 0xFF	; 255
    1338:	a3 01       	movw	r20, r6
    133a:	f1 d0       	rcall	.+482    	; 0x151e <__ultoa_invert>
    133c:	88 2e       	mov	r8, r24
    133e:	86 18       	sub	r8, r6
    1340:	fb 2d       	mov	r31, r11
    1342:	ff 77       	andi	r31, 0x7F	; 127
    1344:	3f 2e       	mov	r3, r31
    1346:	36 fe       	sbrs	r3, 6
    1348:	0d c0       	rjmp	.+26     	; 0x1364 <vfprintf+0x2e4>
    134a:	23 2d       	mov	r18, r3
    134c:	2e 7f       	andi	r18, 0xFE	; 254
    134e:	a2 2e       	mov	r10, r18
    1350:	89 14       	cp	r8, r9
    1352:	58 f4       	brcc	.+22     	; 0x136a <vfprintf+0x2ea>
    1354:	34 fe       	sbrs	r3, 4
    1356:	0b c0       	rjmp	.+22     	; 0x136e <vfprintf+0x2ee>
    1358:	32 fc       	sbrc	r3, 2
    135a:	09 c0       	rjmp	.+18     	; 0x136e <vfprintf+0x2ee>
    135c:	83 2d       	mov	r24, r3
    135e:	8e 7e       	andi	r24, 0xEE	; 238
    1360:	a8 2e       	mov	r10, r24
    1362:	05 c0       	rjmp	.+10     	; 0x136e <vfprintf+0x2ee>
    1364:	b8 2c       	mov	r11, r8
    1366:	a3 2c       	mov	r10, r3
    1368:	03 c0       	rjmp	.+6      	; 0x1370 <vfprintf+0x2f0>
    136a:	b8 2c       	mov	r11, r8
    136c:	01 c0       	rjmp	.+2      	; 0x1370 <vfprintf+0x2f0>
    136e:	b9 2c       	mov	r11, r9
    1370:	a4 fe       	sbrs	r10, 4
    1372:	0f c0       	rjmp	.+30     	; 0x1392 <vfprintf+0x312>
    1374:	fe 01       	movw	r30, r28
    1376:	e8 0d       	add	r30, r8
    1378:	f1 1d       	adc	r31, r1
    137a:	80 81       	ld	r24, Z
    137c:	80 33       	cpi	r24, 0x30	; 48
    137e:	21 f4       	brne	.+8      	; 0x1388 <vfprintf+0x308>
    1380:	9a 2d       	mov	r25, r10
    1382:	99 7e       	andi	r25, 0xE9	; 233
    1384:	a9 2e       	mov	r10, r25
    1386:	09 c0       	rjmp	.+18     	; 0x139a <vfprintf+0x31a>
    1388:	a2 fe       	sbrs	r10, 2
    138a:	06 c0       	rjmp	.+12     	; 0x1398 <vfprintf+0x318>
    138c:	b3 94       	inc	r11
    138e:	b3 94       	inc	r11
    1390:	04 c0       	rjmp	.+8      	; 0x139a <vfprintf+0x31a>
    1392:	8a 2d       	mov	r24, r10
    1394:	86 78       	andi	r24, 0x86	; 134
    1396:	09 f0       	breq	.+2      	; 0x139a <vfprintf+0x31a>
    1398:	b3 94       	inc	r11
    139a:	a3 fc       	sbrc	r10, 3
    139c:	10 c0       	rjmp	.+32     	; 0x13be <vfprintf+0x33e>
    139e:	a0 fe       	sbrs	r10, 0
    13a0:	06 c0       	rjmp	.+12     	; 0x13ae <vfprintf+0x32e>
    13a2:	b2 14       	cp	r11, r2
    13a4:	80 f4       	brcc	.+32     	; 0x13c6 <vfprintf+0x346>
    13a6:	28 0c       	add	r2, r8
    13a8:	92 2c       	mov	r9, r2
    13aa:	9b 18       	sub	r9, r11
    13ac:	0d c0       	rjmp	.+26     	; 0x13c8 <vfprintf+0x348>
    13ae:	b2 14       	cp	r11, r2
    13b0:	58 f4       	brcc	.+22     	; 0x13c8 <vfprintf+0x348>
    13b2:	b6 01       	movw	r22, r12
    13b4:	80 e2       	ldi	r24, 0x20	; 32
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	76 d0       	rcall	.+236    	; 0x14a6 <fputc>
    13ba:	b3 94       	inc	r11
    13bc:	f8 cf       	rjmp	.-16     	; 0x13ae <vfprintf+0x32e>
    13be:	b2 14       	cp	r11, r2
    13c0:	18 f4       	brcc	.+6      	; 0x13c8 <vfprintf+0x348>
    13c2:	2b 18       	sub	r2, r11
    13c4:	02 c0       	rjmp	.+4      	; 0x13ca <vfprintf+0x34a>
    13c6:	98 2c       	mov	r9, r8
    13c8:	21 2c       	mov	r2, r1
    13ca:	a4 fe       	sbrs	r10, 4
    13cc:	0f c0       	rjmp	.+30     	; 0x13ec <vfprintf+0x36c>
    13ce:	b6 01       	movw	r22, r12
    13d0:	80 e3       	ldi	r24, 0x30	; 48
    13d2:	90 e0       	ldi	r25, 0x00	; 0
    13d4:	68 d0       	rcall	.+208    	; 0x14a6 <fputc>
    13d6:	a2 fe       	sbrs	r10, 2
    13d8:	16 c0       	rjmp	.+44     	; 0x1406 <vfprintf+0x386>
    13da:	a1 fc       	sbrc	r10, 1
    13dc:	03 c0       	rjmp	.+6      	; 0x13e4 <vfprintf+0x364>
    13de:	88 e7       	ldi	r24, 0x78	; 120
    13e0:	90 e0       	ldi	r25, 0x00	; 0
    13e2:	02 c0       	rjmp	.+4      	; 0x13e8 <vfprintf+0x368>
    13e4:	88 e5       	ldi	r24, 0x58	; 88
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	b6 01       	movw	r22, r12
    13ea:	0c c0       	rjmp	.+24     	; 0x1404 <vfprintf+0x384>
    13ec:	8a 2d       	mov	r24, r10
    13ee:	86 78       	andi	r24, 0x86	; 134
    13f0:	51 f0       	breq	.+20     	; 0x1406 <vfprintf+0x386>
    13f2:	a1 fe       	sbrs	r10, 1
    13f4:	02 c0       	rjmp	.+4      	; 0x13fa <vfprintf+0x37a>
    13f6:	8b e2       	ldi	r24, 0x2B	; 43
    13f8:	01 c0       	rjmp	.+2      	; 0x13fc <vfprintf+0x37c>
    13fa:	80 e2       	ldi	r24, 0x20	; 32
    13fc:	a7 fc       	sbrc	r10, 7
    13fe:	8d e2       	ldi	r24, 0x2D	; 45
    1400:	b6 01       	movw	r22, r12
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	50 d0       	rcall	.+160    	; 0x14a6 <fputc>
    1406:	89 14       	cp	r8, r9
    1408:	30 f4       	brcc	.+12     	; 0x1416 <vfprintf+0x396>
    140a:	b6 01       	movw	r22, r12
    140c:	80 e3       	ldi	r24, 0x30	; 48
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	4a d0       	rcall	.+148    	; 0x14a6 <fputc>
    1412:	9a 94       	dec	r9
    1414:	f8 cf       	rjmp	.-16     	; 0x1406 <vfprintf+0x386>
    1416:	8a 94       	dec	r8
    1418:	f3 01       	movw	r30, r6
    141a:	e8 0d       	add	r30, r8
    141c:	f1 1d       	adc	r31, r1
    141e:	80 81       	ld	r24, Z
    1420:	b6 01       	movw	r22, r12
    1422:	90 e0       	ldi	r25, 0x00	; 0
    1424:	40 d0       	rcall	.+128    	; 0x14a6 <fputc>
    1426:	81 10       	cpse	r8, r1
    1428:	f6 cf       	rjmp	.-20     	; 0x1416 <vfprintf+0x396>
    142a:	22 20       	and	r2, r2
    142c:	09 f4       	brne	.+2      	; 0x1430 <vfprintf+0x3b0>
    142e:	4e ce       	rjmp	.-868    	; 0x10cc <vfprintf+0x4c>
    1430:	b6 01       	movw	r22, r12
    1432:	80 e2       	ldi	r24, 0x20	; 32
    1434:	90 e0       	ldi	r25, 0x00	; 0
    1436:	37 d0       	rcall	.+110    	; 0x14a6 <fputc>
    1438:	2a 94       	dec	r2
    143a:	f7 cf       	rjmp	.-18     	; 0x142a <vfprintf+0x3aa>
    143c:	f6 01       	movw	r30, r12
    143e:	86 81       	ldd	r24, Z+6	; 0x06
    1440:	97 81       	ldd	r25, Z+7	; 0x07
    1442:	02 c0       	rjmp	.+4      	; 0x1448 <vfprintf+0x3c8>
    1444:	8f ef       	ldi	r24, 0xFF	; 255
    1446:	9f ef       	ldi	r25, 0xFF	; 255
    1448:	2b 96       	adiw	r28, 0x0b	; 11
    144a:	0f b6       	in	r0, 0x3f	; 63
    144c:	f8 94       	cli
    144e:	de bf       	out	0x3e, r29	; 62
    1450:	0f be       	out	0x3f, r0	; 63
    1452:	cd bf       	out	0x3d, r28	; 61
    1454:	df 91       	pop	r29
    1456:	cf 91       	pop	r28
    1458:	1f 91       	pop	r17
    145a:	0f 91       	pop	r16
    145c:	ff 90       	pop	r15
    145e:	ef 90       	pop	r14
    1460:	df 90       	pop	r13
    1462:	cf 90       	pop	r12
    1464:	bf 90       	pop	r11
    1466:	af 90       	pop	r10
    1468:	9f 90       	pop	r9
    146a:	8f 90       	pop	r8
    146c:	7f 90       	pop	r7
    146e:	6f 90       	pop	r6
    1470:	5f 90       	pop	r5
    1472:	4f 90       	pop	r4
    1474:	3f 90       	pop	r3
    1476:	2f 90       	pop	r2
    1478:	08 95       	ret

0000147a <strnlen_P>:
    147a:	fc 01       	movw	r30, r24
    147c:	05 90       	lpm	r0, Z+
    147e:	61 50       	subi	r22, 0x01	; 1
    1480:	70 40       	sbci	r23, 0x00	; 0
    1482:	01 10       	cpse	r0, r1
    1484:	d8 f7       	brcc	.-10     	; 0x147c <strnlen_P+0x2>
    1486:	80 95       	com	r24
    1488:	90 95       	com	r25
    148a:	8e 0f       	add	r24, r30
    148c:	9f 1f       	adc	r25, r31
    148e:	08 95       	ret

00001490 <strnlen>:
    1490:	fc 01       	movw	r30, r24
    1492:	61 50       	subi	r22, 0x01	; 1
    1494:	70 40       	sbci	r23, 0x00	; 0
    1496:	01 90       	ld	r0, Z+
    1498:	01 10       	cpse	r0, r1
    149a:	d8 f7       	brcc	.-10     	; 0x1492 <strnlen+0x2>
    149c:	80 95       	com	r24
    149e:	90 95       	com	r25
    14a0:	8e 0f       	add	r24, r30
    14a2:	9f 1f       	adc	r25, r31
    14a4:	08 95       	ret

000014a6 <fputc>:
    14a6:	0f 93       	push	r16
    14a8:	1f 93       	push	r17
    14aa:	cf 93       	push	r28
    14ac:	df 93       	push	r29
    14ae:	fb 01       	movw	r30, r22
    14b0:	23 81       	ldd	r18, Z+3	; 0x03
    14b2:	21 fd       	sbrc	r18, 1
    14b4:	03 c0       	rjmp	.+6      	; 0x14bc <fputc+0x16>
    14b6:	8f ef       	ldi	r24, 0xFF	; 255
    14b8:	9f ef       	ldi	r25, 0xFF	; 255
    14ba:	2c c0       	rjmp	.+88     	; 0x1514 <fputc+0x6e>
    14bc:	22 ff       	sbrs	r18, 2
    14be:	16 c0       	rjmp	.+44     	; 0x14ec <fputc+0x46>
    14c0:	46 81       	ldd	r20, Z+6	; 0x06
    14c2:	57 81       	ldd	r21, Z+7	; 0x07
    14c4:	24 81       	ldd	r18, Z+4	; 0x04
    14c6:	35 81       	ldd	r19, Z+5	; 0x05
    14c8:	42 17       	cp	r20, r18
    14ca:	53 07       	cpc	r21, r19
    14cc:	44 f4       	brge	.+16     	; 0x14de <fputc+0x38>
    14ce:	a0 81       	ld	r26, Z
    14d0:	b1 81       	ldd	r27, Z+1	; 0x01
    14d2:	9d 01       	movw	r18, r26
    14d4:	2f 5f       	subi	r18, 0xFF	; 255
    14d6:	3f 4f       	sbci	r19, 0xFF	; 255
    14d8:	31 83       	std	Z+1, r19	; 0x01
    14da:	20 83       	st	Z, r18
    14dc:	8c 93       	st	X, r24
    14de:	26 81       	ldd	r18, Z+6	; 0x06
    14e0:	37 81       	ldd	r19, Z+7	; 0x07
    14e2:	2f 5f       	subi	r18, 0xFF	; 255
    14e4:	3f 4f       	sbci	r19, 0xFF	; 255
    14e6:	37 83       	std	Z+7, r19	; 0x07
    14e8:	26 83       	std	Z+6, r18	; 0x06
    14ea:	14 c0       	rjmp	.+40     	; 0x1514 <fputc+0x6e>
    14ec:	8b 01       	movw	r16, r22
    14ee:	ec 01       	movw	r28, r24
    14f0:	fb 01       	movw	r30, r22
    14f2:	00 84       	ldd	r0, Z+8	; 0x08
    14f4:	f1 85       	ldd	r31, Z+9	; 0x09
    14f6:	e0 2d       	mov	r30, r0
    14f8:	19 95       	eicall
    14fa:	89 2b       	or	r24, r25
    14fc:	e1 f6       	brne	.-72     	; 0x14b6 <fputc+0x10>
    14fe:	d8 01       	movw	r26, r16
    1500:	16 96       	adiw	r26, 0x06	; 6
    1502:	8d 91       	ld	r24, X+
    1504:	9c 91       	ld	r25, X
    1506:	17 97       	sbiw	r26, 0x07	; 7
    1508:	01 96       	adiw	r24, 0x01	; 1
    150a:	17 96       	adiw	r26, 0x07	; 7
    150c:	9c 93       	st	X, r25
    150e:	8e 93       	st	-X, r24
    1510:	16 97       	sbiw	r26, 0x06	; 6
    1512:	ce 01       	movw	r24, r28
    1514:	df 91       	pop	r29
    1516:	cf 91       	pop	r28
    1518:	1f 91       	pop	r17
    151a:	0f 91       	pop	r16
    151c:	08 95       	ret

0000151e <__ultoa_invert>:
    151e:	fa 01       	movw	r30, r20
    1520:	aa 27       	eor	r26, r26
    1522:	28 30       	cpi	r18, 0x08	; 8
    1524:	51 f1       	breq	.+84     	; 0x157a <__ultoa_invert+0x5c>
    1526:	20 31       	cpi	r18, 0x10	; 16
    1528:	81 f1       	breq	.+96     	; 0x158a <__ultoa_invert+0x6c>
    152a:	e8 94       	clt
    152c:	6f 93       	push	r22
    152e:	6e 7f       	andi	r22, 0xFE	; 254
    1530:	6e 5f       	subi	r22, 0xFE	; 254
    1532:	7f 4f       	sbci	r23, 0xFF	; 255
    1534:	8f 4f       	sbci	r24, 0xFF	; 255
    1536:	9f 4f       	sbci	r25, 0xFF	; 255
    1538:	af 4f       	sbci	r26, 0xFF	; 255
    153a:	b1 e0       	ldi	r27, 0x01	; 1
    153c:	3e d0       	rcall	.+124    	; 0x15ba <__ultoa_invert+0x9c>
    153e:	b4 e0       	ldi	r27, 0x04	; 4
    1540:	3c d0       	rcall	.+120    	; 0x15ba <__ultoa_invert+0x9c>
    1542:	67 0f       	add	r22, r23
    1544:	78 1f       	adc	r23, r24
    1546:	89 1f       	adc	r24, r25
    1548:	9a 1f       	adc	r25, r26
    154a:	a1 1d       	adc	r26, r1
    154c:	68 0f       	add	r22, r24
    154e:	79 1f       	adc	r23, r25
    1550:	8a 1f       	adc	r24, r26
    1552:	91 1d       	adc	r25, r1
    1554:	a1 1d       	adc	r26, r1
    1556:	6a 0f       	add	r22, r26
    1558:	71 1d       	adc	r23, r1
    155a:	81 1d       	adc	r24, r1
    155c:	91 1d       	adc	r25, r1
    155e:	a1 1d       	adc	r26, r1
    1560:	20 d0       	rcall	.+64     	; 0x15a2 <__ultoa_invert+0x84>
    1562:	09 f4       	brne	.+2      	; 0x1566 <__ultoa_invert+0x48>
    1564:	68 94       	set
    1566:	3f 91       	pop	r19
    1568:	2a e0       	ldi	r18, 0x0A	; 10
    156a:	26 9f       	mul	r18, r22
    156c:	11 24       	eor	r1, r1
    156e:	30 19       	sub	r19, r0
    1570:	30 5d       	subi	r19, 0xD0	; 208
    1572:	31 93       	st	Z+, r19
    1574:	de f6       	brtc	.-74     	; 0x152c <__ultoa_invert+0xe>
    1576:	cf 01       	movw	r24, r30
    1578:	08 95       	ret
    157a:	46 2f       	mov	r20, r22
    157c:	47 70       	andi	r20, 0x07	; 7
    157e:	40 5d       	subi	r20, 0xD0	; 208
    1580:	41 93       	st	Z+, r20
    1582:	b3 e0       	ldi	r27, 0x03	; 3
    1584:	0f d0       	rcall	.+30     	; 0x15a4 <__ultoa_invert+0x86>
    1586:	c9 f7       	brne	.-14     	; 0x157a <__ultoa_invert+0x5c>
    1588:	f6 cf       	rjmp	.-20     	; 0x1576 <__ultoa_invert+0x58>
    158a:	46 2f       	mov	r20, r22
    158c:	4f 70       	andi	r20, 0x0F	; 15
    158e:	40 5d       	subi	r20, 0xD0	; 208
    1590:	4a 33       	cpi	r20, 0x3A	; 58
    1592:	18 f0       	brcs	.+6      	; 0x159a <__ultoa_invert+0x7c>
    1594:	49 5d       	subi	r20, 0xD9	; 217
    1596:	31 fd       	sbrc	r19, 1
    1598:	40 52       	subi	r20, 0x20	; 32
    159a:	41 93       	st	Z+, r20
    159c:	02 d0       	rcall	.+4      	; 0x15a2 <__ultoa_invert+0x84>
    159e:	a9 f7       	brne	.-22     	; 0x158a <__ultoa_invert+0x6c>
    15a0:	ea cf       	rjmp	.-44     	; 0x1576 <__ultoa_invert+0x58>
    15a2:	b4 e0       	ldi	r27, 0x04	; 4
    15a4:	a6 95       	lsr	r26
    15a6:	97 95       	ror	r25
    15a8:	87 95       	ror	r24
    15aa:	77 95       	ror	r23
    15ac:	67 95       	ror	r22
    15ae:	ba 95       	dec	r27
    15b0:	c9 f7       	brne	.-14     	; 0x15a4 <__ultoa_invert+0x86>
    15b2:	00 97       	sbiw	r24, 0x00	; 0
    15b4:	61 05       	cpc	r22, r1
    15b6:	71 05       	cpc	r23, r1
    15b8:	08 95       	ret
    15ba:	9b 01       	movw	r18, r22
    15bc:	ac 01       	movw	r20, r24
    15be:	0a 2e       	mov	r0, r26
    15c0:	06 94       	lsr	r0
    15c2:	57 95       	ror	r21
    15c4:	47 95       	ror	r20
    15c6:	37 95       	ror	r19
    15c8:	27 95       	ror	r18
    15ca:	ba 95       	dec	r27
    15cc:	c9 f7       	brne	.-14     	; 0x15c0 <__ultoa_invert+0xa2>
    15ce:	62 0f       	add	r22, r18
    15d0:	73 1f       	adc	r23, r19
    15d2:	84 1f       	adc	r24, r20
    15d4:	95 1f       	adc	r25, r21
    15d6:	a0 1d       	adc	r26, r0
    15d8:	08 95       	ret

000015da <_exit>:
    15da:	f8 94       	cli

000015dc <__stop_program>:
    15dc:	ff cf       	rjmp	.-2      	; 0x15dc <__stop_program>
